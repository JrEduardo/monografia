% ------------------------------------------------------------------------
% CAPÍTULO 4 - RESULTADOS E DISCUSSÃO
% ------------------------------------------------------------------------

Neste capítulo são apresentados os resultados e discussões da aplicação
dos modelos de regressão COM-Poisson ajustados aos dados apresentados na
\autoref{cap03:materiais-dados}. Os resultados são comparados com
abordagens comuns na estatística aplicada. As primeiras seis seções são
destinadas à apresentação das análises estatísticas de cada conjunto de
dados citado. Na \autoref{cap04:discussao}, faz-se uma discussão geral
sobre os resultados dos modelos COM-Poisson empregados nas análises.

\section{Análise de dados de capulhos de algodão sob efeito de desfolha}
\label{sec:analise-cottonBolls}

<<ajuste-cottonBolls, include=FALSE, cache=TRUE>>=

## Dados
library(cmpreg)
data(cottonBolls)

## Preditores
f1 <- ncap ~ 1
f2 <- ncap ~ des
f3 <- ncap ~ des + I(des^2)
f4 <- ncap ~ est:des + I(des^2)
f5 <- ncap ~ est:(des + I(des^2))

## Ajustando os modelos Poisson
m1P <- glm(f1, data = cottonBolls, family = poisson)
m2P <- glm(f2, data = cottonBolls, family = poisson)
m3P <- glm(f3, data = cottonBolls, family = poisson)
m4P <- glm(f4, data = cottonBolls, family = poisson)
m5P <- glm(f5, data = cottonBolls, family = poisson)

## Ajustando os modelos quasiPoisson
m1Q <- glm(f1, data = cottonBolls, family = quasipoisson)
m2Q <- glm(f2, data = cottonBolls, family = quasipoisson)
m3Q <- glm(f3, data = cottonBolls, family = quasipoisson)
m4Q <- glm(f4, data = cottonBolls, family = quasipoisson)
m5Q <- glm(f5, data = cottonBolls, family = quasipoisson)

## Ajustando os modelos COM-Poisson
m1C <- cmp(f1, data = cottonBolls, sumto = 30)
m2C <- cmp(f2, data = cottonBolls, sumto = 30)
m3C <- cmp(f3, data = cottonBolls, sumto = 30)
m4C <- cmp(f4, data = cottonBolls, sumto = 30)
m5C <- cmp(f5, data = cottonBolls, sumto = 30)

##======================================================================
## Perfil de log-verossimilhanca para o parametro phi
prof.cottonBolls <- profile(m5C, which = "phi")

@

Diante da estrutura do experimento apresentada na
\autoref{sec:cottonBolls} foram propostos, por \citeonline{Zeviani2014},
cinco preditores crescentes em complexidade que testam aspectos
interesses sobre os fatores experimentais. Sendo \texttt{def} a
covariável que representa o nível de desfolha artificial (0, 25, 50, 75
e 100\%), os preditores considerados são,
\begin{itemize}
  \setlength\itemsep{-0.6cm}
\item[] Preditor 1: $g(\mu) = \beta_0$ \\
\item[] Preditor 2: $g(\mu) = \beta_0 + \beta_1 \textrm{def}$ \\
\item[] Preditor 3: $g(\mu) = \beta_0 + \beta_{1} \textrm{def} + \beta_2
  \textrm{def}^2$ \\
\item[] Preditor 4:
  $g(\mu) = \beta_0 + \beta_{1j} \textrm{def} + \beta_2
  \textrm{def}^2$ \\
\item[] Preditor 5:
  $g(\mu) = \beta_0 + \beta_{1j} \textrm{def} + \beta_{2j}
  \textrm{def}^2$,
\end{itemize}
onde $j$ varia nos níveis de estágio fenológico da planta (1:
vegetativo, 2: botão floral, 3: florescimento, 4: maça, 5: capulho) e
$g(\mu)$ a função de ligação considerada no modelo. A proposta desses
preditores foi realizada de forma aninhada a fim de facilitar a condução
de testes de hipóteses. O modelo 1 contêm somente o intercepto, e é
ajustado apenas como ponto de partida para verificar como modelos mais
estruturados melhoram o ajuste. O modelo 2 apresenta apenas o efeito de
desfolha de forma linear. O modelo 3 é o modelo 2 somado um efeito de
segunda ordem. O modelo 4, apresenta o efeito de desfolha linear mudando
de acordo com o estágio de crescimento (interação entre o efeito linear
de desfolha e estágio). E por fim, no modelo 5 não somente o efeito de
primeira ordem muda com o estágio de crescimento, mas também o efeito
de segunda ordem (interação entre o efeito de primeira e segunda ordem
de desfolha e estágio).

Na sequência da análise, foram ajustados os modelos Poisson e
COM-Poisson como alternativas paramétricas à análise de dados e, o
modelo quase-Poisson, como alternativa especificada apenas pela média e
variância. Na \autoref{tab:ajuste-cottonBolls}, os resultados dos três
modelos ajustados aos cinco preditores são apresentados. O modelo
COM-Poisson apresentou melhor ajuste dentre todos os preditores
considerados quando comparado ao Poisson, indicado pelas maiores
log-verossimilhanças e menores AIC's.

<<loglik-cottonBolls, include=FALSE>>=

## Análise de desvios dos modelos
anP <- myanova(m1P, m2P, m3P, m4P, m5P)
anC <- myanova(m1C, m2C, m3C, m4C, m5C)
anQ <- myanova(m1Q, m2Q, m3Q, m4Q, m5Q)

## Parâmetros de dispersão
sigma <- quasitest(m1Q, m2Q, m3Q, m4Q, m5Q)
phi <- cmptest(m1C, m2C, m3C, m4C, m5C)

## Tabelas com as medidas de ajuste
tabP <- cbind(anP, matrix(nrow = nrow(anP), ncol = 2))
tabC <- cbind(anC, phi)
tabQ <- cbind(anQ, sigma)

etas <- rep(paste("Preditor", 1:5), 3)

## Empilhando as tabelas de ANODEV
tab.ajuste <- rbind(tabP, tabC, tabQ)
rownames(tab.ajuste) <- NULL
tab.ajuste <- data.frame(etas, tab.ajuste)

## Para notação científica nas tabelas Latex
digits <- c(1, 0, 0, 2, 2, 2, 0, -2, 3, -2)

@

\begin{table}[ht]
\centering
\small
\caption{Medidas de ajuste para avaliação e comparação entre preditores
  e modelos ajustados}
\label{tab:ajuste-cottonBolls}
\begin{tabular}{lcccccrcr}
  \toprule
 Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) &  &  \\
 \midrule
<<tab-cottonBolls1, results="asis">>=

## Resultados em formato de tabela Latex
print(xtable(tab.ajuste[1:5, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
  COM-Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & $\hat{\phi}$ & P($>\rchi^2$) \\
  \midrule
<<tab-cottonBolls2, results="asis">>=

## Resultados em formato de tabela Latex
print(xtable(tab.ajuste[6:10, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
  Quase-Poisson & np & deviance & AIC & F & diff np & P($>F$) & $\hat{\sigma}^2$ & P($>\rchi^2$) \\
  \midrule
<<tab-cottonBolls3, results="asis">>=

## Resultados em formato de tabela Latex
print(xtable(tab.ajuste[11:15, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
 \bottomrule
\end{tabular}
\begin{tablenotes}
  \footnotesize
\item np, número de parâmetros; diff $\ell$, diferença entre
  log-verossimilhanças; F, estatística F baseada nas quase-deviances;
  diff np, diferença entre o np. \\[0.1cm]
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

As estimativas dos parâmetros extras $\phi$ e $\sigma^2$ dos modelos
COM-Poisson e quase-Poisson, respectivamente, também são apresentadas na
\autoref{tab:ajuste-cottonBolls} e indicam subdispersão ($\phi>0$ e
$\sigma^2<1$). Note que, mesmo não considerando covariáveis (preditor 1)
a hipótese de equidispersão foi rejeitada pelos modelos COM-Poisson e
quase-Poisson. Isso se reflete nos níveis descritivos dos testes de
razão de verossimilhanças realizados, em que o modelo Poisson, em
discordância com os demais, não indicou significância do efeito
quadrático do nível de desfolha por estágio fenológico (preditor 5),
pois superestima a variabilidade do processo. Esses resultados estão de
acordos com os apresentados por \citeonline{Zeviani2014}, onde o modelo
\textit{Gamma-Count} foi ajustado. Destaca-se a similaridade entre as
medidas de ajuste dos modelos COM-Poisson e \textit{Gamma-Count}. Os
valores das log-verossimilhanças maximizadas nos dois modelos difere
somente nas casas decimais, para todos os preditores.

\begin{table}[ht]
\centering
\caption{Estimativas dos parâmetros e razões entre as estimativa e erro
  padrão para os três modelos em estudo}
\label{tab:coef-cottonBolls}
\begin{tabular}{lcccccc}
  \toprule
  & \multicolumn{2}{c}{Poisson} & \multicolumn{2}{c}{Quase-Poisson} &  \multicolumn{2}{c}{COM-Poisson} \\
  \cmidrule(lr){2-3} \cmidrule(lr){4-5} \cmidrule(lr){6-7}
  Parâmetro  & Estimativa & Est/EP & Estimativa & Est/EP & Estimativa & Est/EP \\
  \midrule
<<coef-cottonBolls, results="asis">>=

pnames <- c("\\sigma^2,\\,\\phi ", "\\beta_0",
            paste0("\\beta_{1", 1:5, "}"),
            paste0("\\beta_{2", 1:5, "}"))

## Tabela com os coeficientes
tab.coef <- coeftab(m5P, m5Q, m5C,
                    rownames = paste0("$", pnames, "$"))

print.xtable(xtable(tab.coef),
             include.rownames = TRUE,
             include.colnames = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
   \bottomrule
\end{tabular}
\begin{tablenotes}
  \small
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

<<prof-cottonBolls, fig.height=3.5, fig.width=4, out.width="0.6\\linewidth", fig.cap="Perfil de log-verossimilhança para o parâmetro extra da COM-Poisson, estimado no modelo com o efeito quadrático do nível de desfolha por cada estágio fenológico.">>=

myprof(prof.cottonBolls, namestrip = expression("Perfil para"~phi),
       par.settings = ps.sub)
fonte.xy("Fonte: Elaborado pelo autor.")

@

Na \autoref{fig:prof-cottonBolls}, a avaliação do parâmetro $\phi$ do
modelo COM-Poisson com efeito de desfolha artificial de primeira e
segunda ordem para cada estágio fenológico, via verossimilhança
perfilhada, é apresentada. O valor zero, que representa a não
necessidade de um modelo COM-Poisson, não está dentro dos limites de
confiança de 99, 95 e até 90\%. A simetria do perfil de verossimilhança
também é algo para se destacar, pois neste caso intervalos do tipo Wald
(computacionalmente mais fáceis), via aproximação quadrática da
verossimilhança, podem ser construídos, muito embora os construídos via
perfil de log-verossimilhança sejam preferíveis. Em concordância com a
figura, o teste de hipóteses via razão de verossimilhanças para $H_0:
\phi = 0$ (última coluna da \autoref{tab:ajuste-cottonBolls}), rejeitou
a hipótese nula com um nível de significância muito próximo a zero.

<<corr-cottonBolls, fig.width=7, fig.height=7, fig.cap="Imagem da matriz de correlação entre os parâmetros do modelo COM-Poisson.">>=

Vcov <- vcov(m5C)
Corr <- cov2cor(Vcov)

# Usando expression não funciona! Estudar a função posteriormente
pnames <- c(":hat(phi)", ":hat(beta)[0]",
            paste0(":hat(beta)[1", 1:5, "]"),
            paste0(":hat(beta)[2", 1:5, "]"))
dimnames(Corr) <- list(pnames, pnames)

mycorrplot(Corr)
fonte("Fonte: Elaborado pelo autor.")

@

As estimativas dos efeitos lineares e quadráticos de desfolha
artificial, conforme notação do preditor 5, são apresentadas na
\autoref{tab:coef-cottonBolls} para os modelos Poisson, quase-Poisson e
COM-Poisson. Para os modelos Poisson e quase-Poisson as estimativas são
idênticas, por construção (veja \autoref{cap02:poisson}), o que difere
são as magnitudes dessas estimativas em comparação com seu erro padrão,
que no caso quase-Poisson é corrigido pelo parâmetro
$\sigma^2$. Considerando o modelo COM-Poisson, as estimativas são
notavelmente diferentes, pois o preditor linear é construído em
$\lambda$, da \autoref{eqn:pmf-compoisson}, e esse parâmetro não
descreve, diretamente, a média da distribuição. Sendo assim, as
estimativas do COM-Poisson não podem ser comparadas com as demais
estimativas. Contudo, a magnitude desses efeitos, com relação ao seu erro
padrão, sim. E nesse caso, os modelos quase-Poisson e COM-Poisson levam
as mesmas conclusões.

Devido ao modelo COM-Poisson não ser construído diretamente para a
média, as estimativas dos parâmetros não refletem efeitos
multiplicativos na média, como ocorre nos casos Poisson e
quase-Poisson. Com isso, a interpretação dos efeitos nesse modelo é
somente com relação ao sinal da estimativa, quando positivo indica um
aumento na média da variável de interesse, e quando negativo uma
diminuição.

As covariâncias entre as estimadores do modelo COM-Poisson, obtidas a
partir da matriz de informação de Fisher, são apresentadas, na escala da
correlação, na \autoref{fig:corr-cottonBolls}. Destaca-se nessa figura a
forte correlação do parâmetro de precisão $\phi$ com os $\beta$'s da
regressão. Embora seja uma representação empírica, observada a esse
particular conjunto de dados, nota-se a não ortogonalidade na matriz de
informação observada, o que implica que inferências sobre os $\beta$'s
são condicionais a $\phi$. Esse comportamento dos modelos COM-Poisson é
recorrente, como será visto nos demais conjuntos de dados.

<<pred-cottonBolls, fig.height=3.4, fig.width=6.7, fig.cap="Curva dos valores preditos com intervalo de confiança de (95\\%) como função do nível de desfolha e do estágio fenológico da planta.">>=

## Predição pontual/intervalar
pred <- with(cottonBolls,
             expand.grid(
                 est = levels(est),
                 des = seq(min(des), max(des), l = 20)
             ))
qn <- qnorm(0.975) * c(fit = 0, lwr = -1, upr = 1)

##-------------------------------------------
## Considerando a Poisson
aux <- predict(m5P, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Poisson", aux)
predP <- cbind(pred, aux)

##-------------------------------------------
## Considerando a COM-Poisson
aux <- predict(m5C, newdata = pred, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux)
predC <- cbind(pred, aux)

##-------------------------------------------
## Considerando a Quase-Poisson
aux <- predict(m5Q, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ <- cbind(pred, aux)

da <- rbind(predP, predC, predQ)

##-------------------------------------------
## Gráfico dos valores preditos e IC de 95% para média
cols <- trellis.par.get("superpose.line")$col[1:3]

key <- list(
    column = 3,
    lines = list(lty = c(3, 1, 2), lwd = 1, col = cols),
    text = list(c("Poisson", "COM-Poisson", "Quase-Poisson")))

xyplot(ncap ~ des | est,
       data = cottonBolls,
       layout = c(NA, 1),
       as.table = TRUE,
       alpha = 0.5,
       type = c("p", "g"),
       xlab = "Níveis de desfolha artificial",
       ylab = "Número de capulhos produzidos",
       xlim = extendrange(c(0:1), f = 0.15),
       spread = 0.08,
       panel = panel.beeswarm,
       key = key,
       par.settings = ps.sub) +
    as.layer(
        xyplot(fit + lwr + upr ~ des | est, data = predP,
               type = "l", col = cols[1], lty = c(1, 3, 3), lwd = 1)
    ) +
    as.layer(
        xyplot(fit + lwr + upr ~ des | est, data = predC,
               type = "l", col = cols[2], lty = c(1, 1, 1), lwd = 1)
    )  +
    as.layer(
        xyplot(fit + lwr + upr ~ des | est, data = predQ,
               type = "l", col = cols[3], lty = c(1, 2, 2), lwd = 1)
    )

fonte.xy("Fonte: Elaborado pelo autor.")

@

Essa característica de não ortogonalidade da matriz de informação
observada teve de ser levada em consideração para cálculo dos valores
preditos, uma vez que a informação sobre a incerteza das estimativas
contida na matriz de variâncias e covariâncias não pôde ser
marginalizada para os $\beta$'s, que efetivamente são utilizados para
cálculo de $\hat{\lambda}_i$ e consequentemente $\hat{\mu}_i$. Portanto,
no cálculo dos valores preditos utiliza-se a matriz de variâncias e
covariâncias condicional a $\hat{\phi}$, conforme teorema 3.6
\citeonline[pág. 123]{Ferreira2011}. Para computação dos intervalos de
confiança utiliza-se o método delta \cite{Ribeiro2012}. A utilização da
matriz de variâncias e covariâncias condicional e o método delta para
computação dos valores preditos, são práticas tomadas também na análise
dos demais conjuntos de dados.

As médias com intervalos de confiança calculadas com os modelos
COM-Poisson e quase-Poisson são idênticas, conforme pode ser visto na
\autoref{fig:pred-cottonBolls}. Isso se deve ao fato da relação
média--variância ser aproximadamente linear no modelo COM-Poisson (vide
\autoref{fig:mv-compoisson}). Contudo, destaca-se que o modelo
COM-Poisson é totalmente paramétrico permitindo representar uma
distribuição, calculando probabilidades, o que não é possível com a
formulação por quase-verossimilhança. Como visto o modelo Poisson é
inadequado a esse conjunto de dados e inferências a partir deste são
incorretas.

\section{Análise de dados de capulhos de algodão sob efeito de mosca-branca}
\label{sec:analise-cottonBolls2}

<<ajuste-cottonBolls2, include=FALSE, cache=TRUE>>=

## Dados
library(cmpreg)
data(cottonBolls2)

## Preditores considerados
f1.ncapu <- ncapu ~ 1
f2.ncapu <- ncapu ~ dexp
f3.ncapu <- ncapu ~ dexp + I(dexp^2)

f1.nerep <- nerep ~ 1
f2.nerep <- nerep ~ dexp
f3.nerep <- nerep ~ dexp + I(dexp^2)

f1.nnos <- nnos ~ 1
f2.nnos <- nnos ~ dexp
f3.nnos <- nnos ~ dexp + I(dexp^2)

## Ajustando os modelos Poisson
m1P.ncapu <- glm(f1.ncapu, data = cottonBolls2, family = poisson)
m2P.ncapu <- glm(f2.ncapu, data = cottonBolls2, family = poisson)
m3P.ncapu <- glm(f3.ncapu, data = cottonBolls2, family = poisson)

m1P.nerep <- glm(f1.nerep, data = cottonBolls2, family = poisson)
m2P.nerep <- glm(f2.nerep, data = cottonBolls2, family = poisson)
m3P.nerep <- glm(f3.nerep, data = cottonBolls2, family = poisson)

m1P.nnos <- glm(f1.nnos, data = cottonBolls2, family = poisson)
m2P.nnos <- glm(f2.nnos, data = cottonBolls2, family = poisson)
m3P.nnos <- glm(f3.nnos, data = cottonBolls2, family = poisson)

## Ajustando os modelos quasiPoisson
m1Q.ncapu <- glm(f1.ncapu, data = cottonBolls2, family = quasipoisson)
m2Q.ncapu <- glm(f2.ncapu, data = cottonBolls2, family = quasipoisson)
m3Q.ncapu <- glm(f3.ncapu, data = cottonBolls2, family = quasipoisson)

m1Q.nerep <- glm(f1.nerep, data = cottonBolls2, family = quasipoisson)
m2Q.nerep <- glm(f2.nerep, data = cottonBolls2, family = quasipoisson)
m3Q.nerep <- glm(f3.nerep, data = cottonBolls2, family = quasipoisson)

m1Q.nnos <- glm(f1.nnos, data = cottonBolls2, family = quasipoisson)
m2Q.nnos <- glm(f2.nnos, data = cottonBolls2, family = quasipoisson)
m3Q.nnos <- glm(f3.nnos, data = cottonBolls2, family = quasipoisson)

## Ajustando os modelos COM-Poisson
m1C.ncapu <- cmp(f1.ncapu, data = cottonBolls2, sumto = 30)
m2C.ncapu <- cmp(f2.ncapu, data = cottonBolls2, sumto = 30)
m3C.ncapu <- cmp(f3.ncapu, data = cottonBolls2, sumto = 30)

m1C.nerep <- cmp(f1.nerep, data = cottonBolls2, sumto = 30)
m2C.nerep <- cmp(f2.nerep, data = cottonBolls2, sumto = 30)
m3C.nerep <- cmp(f3.nerep, data = cottonBolls2, sumto = 30)

m1C.nnos <- cmp(f1.nnos, data = cottonBolls2, sumto = 30)
m2C.nnos <- cmp(f2.nnos, data = cottonBolls2, sumto = 30)
m3C.nnos <- cmp(f3.nnos, data = cottonBolls2, sumto = 30)

##======================================================================
## Perfil de log-verossimilhanca para o parametro phi
prof.ncapu <- profile(m3C.ncapu, which = "phi")
prof.nerep <- profile(m2C.nerep, which = "phi")
prof.nnos <- profile(m3C.nnos, which = "phi")

@

Nesse conjunto de dados também há indícios de subdispersão para as
três variáveis de interesse mensuradas no estudo, conforme apresentado
na \autoref{sec:cottonBolls2}. Para cada contagem procedeu-se com o
ajuste dos modelos Poisson, quase-Poisson e COM-Poisson com os
preditores:
\begin{itemize}
  \setlength\itemsep{-0.6cm}
\item[] Preditor 1: $g(\mu) = \beta_0$ \\
\item[] Preditor 2: $g(\mu) = \beta_0 + \beta_1 \textrm{dexp}$ \\
\item[] Preditor 3:
  $g(\mu) = \beta_0 + \beta_1 \textrm{dexp} + \beta_2 \textrm{dexp}^2$;
\end{itemize}
sendo \texttt{dexp} a variável dias de exposição à alta infestação de
mosca-branca. Assim, os preditores 1, 2, 3 representam efeito nulo,
linear e quadrático dos dias de exposição, respectivamente.

<<loglik-cottonBolls2, include=FALSE>>=

## Análise de desvios dos modelos
anP.ncapu <- myanova(m1P.ncapu, m2P.ncapu, m3P.ncapu)
anC.ncapu <- myanova(m1C.ncapu, m2C.ncapu, m3C.ncapu)
anQ.ncapu <- myanova(m1Q.ncapu, m2Q.ncapu, m3Q.ncapu)

anP.nerep <- myanova(m1P.nerep, m2P.nerep, m3P.nerep)
anC.nerep <- myanova(m1C.nerep, m2C.nerep, m3C.nerep)
anQ.nerep <- myanova(m1Q.nerep, m2Q.nerep, m3Q.nerep)

anP.nnos <- myanova(m1P.nnos, m2P.nnos, m3P.nnos)
anC.nnos <- myanova(m1C.nnos, m2C.nnos, m3C.nnos)
anQ.nnos <- myanova(m1Q.nnos, m2Q.nnos, m3Q.nnos)

## Tabela com medidas de ajuste
tab.ncapu <- data.frame(
    modelos = paste("Preditor", 1:3),
    anP.ncapu[, c("np", "ll", "AIC", "P(>Chisq)")],
    anC.ncapu[, c("ll", "AIC", "P(>Chisq)")],
    anQ.ncapu[, c("dev", "P(>F)")])

tab.nerep <- data.frame(
    modelos = paste("Preditor", 1:3),
    anP.nerep[, c("np", "ll", "AIC", "P(>Chisq)")],
    anC.nerep[, c("ll", "AIC", "P(>Chisq)")],
    anQ.nerep[, c("dev", "P(>F)")])

tab.nnos <- data.frame(
    modelos = paste("Preditor", 1:3),
    anP.nnos[, c("np", "ll", "AIC", "P(>Chisq)")],
    anC.nnos[, c("ll", "AIC", "P(>Chisq)")],
    anQ.nnos[, c("dev", "P(>F)")])

## Empilhando
tab.ajuste <- rbind(tab.ncapu, tab.nerep, tab.nnos)

##-------------------------------------------
## Estimativas e testes para o parametro phi
phis <- cmptest(m3C.ncapu, m2C.nerep, m3C.nnos)

## ##----------------------------------------------------------------------
## ## Copiar e colar o corpo do resultado na customização latex abaixo
digits <- c(1, 1, 0, 2, 2, 4, 2, 2, 4, 2, 4)

@

\begin{table}[ht]
\centering
\small
\caption{Medidas de ajuste para avaliação e comparação entre preditores
  e modelos ajustados}
\label{tab:ajuste-cottonBolls2}
\begin{tabular}{lccccccccc}
  \toprule
  & & \multicolumn{3}{c}{Poisson} & \multicolumn{3}{c}{COM-Poisson} & \multicolumn{2}{c}{Quase-Poisson} \\
  \cmidrule{3-5} \cmidrule{6-8} \cmidrule{9-10}
  & np & $\ell$ & AIC & P($>\rchi^2$) & $\ell$ & AIC & P($>\rchi^2$) & deviance & P($>F$) \\
  \midrule
  \multicolumn{10}{l}{{\bfseries \footnotesize Número de capulhos produzidos}} \\[0.0cm]
  \cline{1-4} \\[-0.2cm]
<<tab-conttonBolls21, results="asis">>=

print(xtable(tab.ajuste[1:3, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
  \specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
  \multicolumn{10}{l}{{\bfseries \footnotesize Número de estruturas reprodutivas}} \\[0.0cm]
  \cline{1-4} \\[-0.2cm]
<<tab-conttonBolls22, results="asis">>=

print(xtable(tab.ajuste[4:6, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
  \specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
  \multicolumn{10}{l}{{\bfseries \footnotesize Número de nós da planta}} \\[0.0cm]
  \cline{1-4} \\[-0.2cm]
<<tab-conttonBolls23, results="asis">>=

print(xtable(tab.ajuste[7:9, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
   \bottomrule
\end{tabular}
\begin{tablenotes}
  \footnotesize
\item np, número de parâmetros.
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

Na \autoref{tab:ajuste-cottonBolls2}, são exibidas as medidas de ajuste
dos modelos para as três variáveis resposta. Em todos os casos, o modelo
COM-Poisson apresentou maiores log-verossimilhanças indicando um melhor
ajuste, quando comparado ao Poisson, também indicado pelos valores de
AIC que ponderam a log-verossimilhança pelo número de parâmetros
considerados no modelo. Para questões inferenciais, novamente, há um
desacordo entre os modelos paramétricos. Pelo modelo Poisson não há
evidências para manutenção de nenhum efeito da variável número de dias
sob infestação, em todos os casos, ao passo que, no modelo COM-Poisson
têm-se evidências do efeito quadrático quando considerado o modelo para
o número de nós da planta (nível descritivo de \Sexpr{anC.nnos[3,6]}) e
o número de capulhos produzidos (nível descritivo de
\Sexpr{anC.ncapu[3,6]}, na borda da região de significância, mas com uma
diminuição do AIC em favor do efeito quadrático). Quando modelado o
número de estruturas reprodutivas, o modelo COM-Poisson também não
indicou efeito quadrático, contudo o efeito linear de \texttt{dexp} pode
ser discutido uma vez que a significância do TRV foi de
\Sexpr{anC.ncapu[3,6]} e o AIC apresentou um pequeno aumento com relação
ao modelo nulo. Considera-se nas demais inferências os preditores com
efeito linear, para o número de estruturas reprodutivas e quadrático,
para o número de capulhos produzidos e número de nós da planta.

Na estimação dos parâmetros via quase-verossimilhança Poisson, obteve-se
níveis descritivos mais conservadores para a rejeição da hipótese nula
que no modelo COM-Poisson. Contudo, para escolha de preditores os
resultados se mostram equivalentes.

<<prof-cottonBolls2, fig.height=3, fig.width=7, fig.cap="Perfis de log-verossimilhança para o parâmetro extra da COM-Poisson nos modelos para número de capulhos produzidos (esquerda), número de estruturas reprodutivas (central) e número de nós (direira).">>=

##======================================================================
## Causa
da.ncapu <- as.data.frame(prof.ncapu)
da.nerep <- as.data.frame(prof.nerep)
da.nnos <- as.data.frame(prof.nnos)
##
levels(da.nerep$param) <- "phi2"
levels(da.nnos$param) <- "phi3"
##
vars <- c("param", "z", "focal")
da <- rbind(da.ncapu[, vars], da.nerep[, vars], da.nnos[, vars])
##
cols <- trellis.par.get("superpose.line")$col[1:2]
xyplot(abs(z) ~ focal | param, data = da,
       layout = c(NA, 1),
       scales = list(x = "free"),
       subset = abs(z) < 3.5,
       type = c("l", "g"),
       strip = strip.custom(
           factor.levels = c(
               "Capulhos produzidos",
               "Estruturas reprodutivas",
               "Nós da planta"
           )
       ),
       ylab = expression(abs(z)~~(sqrt(~Delta~"deviance"))),
       xlab = expression(phi),
       panel = function(x, y, subscripts, ...) {
           conf <- c(0.9, 0.95, 0.99)
           hl <- sqrt(qchisq(conf, 1))
           ##-------------------------------------------
           mle <- x[y == 0]
           xl <- x[x < mle]; yl <- y[x < mle]
           xr <- x[x > mle]; yr <- y[x > mle]
           ##-------------------------------------------
           funleft <- approxfun(x = yl, y = xl)
           funright <- approxfun(x = yr, y = xr)
           vxl <- funleft(hl)
           vxr <- funright(hl)
           vz <- c(hl, hl)
           ##-------------------------------------------
           panel.xyplot(x, y, ...)
           panel.arrows(c(vxl, vxr), 0, c(vxl, vxr), vz,
                        code = 1, length = 0.1, lty = 2,
                        col = "gray40")
           panel.segments(vxl, vz, vxr, vz, lty = 2,
                          col = "gray40")
           panel.abline(h = 0, v = mle, lty = 3)
           panel.text(x = rep(mle, 2), y = vz+0.1,
                      labels = paste(conf*100, "%"),
                      col = "gray20")
           panel.abline(v = 0, col = cols[2])
       }, sub = "Fonte: Elaborado pelo autor.")

@

Para avaliação do parâmetro $\phi$ da COM-Poisson nos três modelos
considerados, intervalos de confiança construídos sob perfilhamento da
verossimilhança são exibidos na \autoref{fig:prof-cottonBolls2}. Nenhum
dos intervalos, de 99, 95 e 90\% de confiança, compreende o valor zero
para $\phi$. Os valores estimados dos parâmetros nos modelos para número
de capulhos, número de estruturas reprodutivas e número de nós da planta
foram de \Sexpr{phis[, 1]} respectivamente, indicando subdispersão em
todos os casos.

Na \autoref{fig:corr-cottonBolls2}, são representadas as matrizes de
covariâncias (via correlações) entre os estimadores dos parâmetros
considerados nos modelos para número de capulhos (à esquerda), número de
estruturas reprodutivas (ao centro) e número de nós da plantas (à
direita). A forte correlação entre o estimadores $\hat{\phi}$ e
$\hat{\beta}_0$ (principalmente) também foi observada no ajuste do
modelo para esses conjuntos de dados.

<<corr-cottonBolls2, fig.height=1.7, fig.width=5, out.width="1\\linewidth", fig.cap="Imagem da matriz de correlação entre os parâmetros do modelo COM-Poisson. (esquerda) Modelo para o número de capulhos por parcela, (centro) para o número de estruturas reprodutivas e (direita) para o número de nós por parcela.">>=

pnames <- sprintf(":hat(%s)[%s]", c("phi", rep("beta", 3)),
                  c("", 0:2))

Vcov <- vcov(m3C.ncapu)
Corr.ncapu <- cov2cor(Vcov)
dimnames(Corr.ncapu) <- list(pnames, pnames)

Vcov <- vcov(m3C.nnos)
Corr.nnos <- cov2cor(Vcov)
dimnames(Corr.nnos) <- list(pnames, pnames)

pnames <- sprintf(":hat(%s)[%s]", c("phi", "beta", "beta"),
                  c("", 0:1))
Vcov <- vcov(m2C.nerep)
Corr.nerep <- cov2cor(Vcov)
dimnames(Corr.nerep) <- list(pnames, pnames)

par(mfrow = c(1, 3))

mycorrplot(Corr.ncapu, mar = c(0.2, 1, -0.5, -0.5) + .5, cl.pos = "n")
mtext(text = "Capulhos produzidos",
      side = 1, line = 2.5, cex = 0.7, adj = 0.6, outer = FALSE)
mycorrplot(Corr.nerep, mar = c(-0.5, 1, -0.5, -0.4) + .5, cl.pos = "n")
mtext(text = "Estruturas reprodutivas",
      side = 1, line = 2.5, cex = 0.7, adj = 0.7, outer = FALSE)
mycorrplot(Corr.nnos, mar = c(0.2, 1, -0.5, -0.5) + .5, cl.pos = "n")
mtext(text = "Número de nós",
      side = 1, line = 2.5, cex = 0.7, adj = 0.6, outer = FALSE)

fonte("Fonte: Elaborado pelo autor.", cex = 0.7)

@

<<pred-cottonBolls2, fig.height=3.5, fig.width=7, fig.cap="Curva dos valores preditos com intervalo de confiança de (95\\%) como função dos dias de exposição a alta infestação de Mosca-branca considerando os modelos para o número de estruturas reprodutivas (esquerda), número de capulhos produzidos (centro) e número de nós (direita).">>=

qn <- qnorm(0.975) * c(fit = 0, lwr = -1, upr = 1)

## Predição pontual/intervalar
pred <- data.frame(dexp = with(cottonBolls2,
                               seq(min(dexp), max(dexp), l = 50)))

##======================================================================
## Considerando a Poisson
##-------------------------------------------
## Para ncapu
aux <- predict(m3P.ncapu, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Poisson", aux)
predP.ncapu <- cbind(var = "ncapu", pred, aux)
##-------------------------------------------
## Para nerep
aux <- predict(m2P.nerep, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Poisson", aux)
predP.nerep <- cbind(var = "nerep", pred, aux)
##-------------------------------------------
## Para nnos
aux <- predict(m3P.nnos, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Poisson", aux)
predP.nnos <- cbind(var = "nnos", pred, aux)
##
predP <- rbind(predP.ncapu, predP.nerep, predP.nnos)

##======================================================================
## Considerando a COM-Poisson
##-------------------------------------------
## Para ncapu
aux <- predict(m3C.ncapu, newdata = pred, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux)
predC.ncapu <- cbind(var = "ncapu", pred, aux)
##-------------------------------------------
## Para nerep
aux <- predict(m2C.nerep, newdata = pred, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux)
predC.nerep <- cbind(var = "nerep", pred, aux)
##-------------------------------------------
## Para nnos
aux <- predict(m3C.nnos, newdata = pred, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux)
predC.nnos <- cbind(var = "nnos", pred, aux)
##
predC <- rbind(predC.ncapu, predC.nerep, predC.nnos)

##======================================================================
## Considerando a Quase-Poisson
##-------------------------------------------
## Para ncapu
aux <- predict(m3Q.ncapu, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ.ncapu <- cbind(var = "ncapu", pred, aux)
##-------------------------------------------
## Para nerep
aux <- predict(m2Q.nerep, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ.nerep <- cbind(var = "nerep", pred, aux)
##-------------------------------------------
## Para nnos
aux <- predict(m3Q.nnos, newdata = pred, se.fit = TRUE)
aux <- with(aux, exp(fit + outer(se.fit, qn, FUN = "*")))
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ.nnos <- cbind(var = "nnos", pred, aux)
##
predQ <- rbind(predQ.ncapu, predQ.nerep, predQ.nnos)

##======================================================================
##-------------------------------------------
## Gráfico com os valores preditos
data(cottonBolls2)
vars <- c("dexp", "vaso", "planta", "nerep", "ncapu", "nnos")
cottonBolls2 <- cottonBolls2[, vars]
da <- reshape2::melt(cottonBolls2, id = c("dexp", "vaso", "planta"),
                     variable.name = "va", value.name = "count")
cols <- trellis.par.get("superpose.line")$col[1:3]

key <- list(
    column = 3,
    lines = list(lty = c(3, 1, 2), lwd = 1, col = cols),
    text = list(c("Poisson", "COM-Poisson", "Quase-Poisson")))

da$va <- relevel(da$va, "ncapu")
xyplot(count ~ dexp | va, data = da,
       key = key,
       type = c("p", "g"),
       layout = c(NA, 1),
       ylab = "Contagens",
       xlab = "Dias de exposição a alta infestação de Mosca-branca",
       scales = list(
           y = list(relation = "free", rot = 0)),
       strip = strip.custom(
           factor.levels = c(
               "Capulhos produzidos",
               "Estruturas reprodutivas",
               "Nós da planta")),
       alpha = 0.3,
       spread = 0.15,
       panel = panel.beeswarm,
       par.settings = ps.sub)+
    as.layer(
        xyplot(fit + lwr + upr ~ dexp | var, data = predP,
               layout = c(NA, 1),
               scales = list(
                   y = list(relation = "free", rot = 0)),
               type = "l", col = cols[1], lty = c(1, 4, 4), lwd = 1)
    ) +
    as.layer(
        xyplot(fit + lwr + upr ~ dexp | var, data = predC,
               layout = c(NA, 1),
               scales = list(
                   y = list(relation = "free", rot = 0)),
               type = "l", col = cols[2], lty = c(1, 1, 1), lwd = 1)
    ) +
    as.layer(
        xyplot(fit + lwr + upr ~ dexp | var, data = predQ,
               layout = c(NA, 1),
               scales = list(
                   y = list(relation = "free", rot = 0)),
               type = "l", col = cols[3], lty = c(1, 2, 2), lwd = 1)
    )

fonte.xy("Fonte: Elaborado pelo autor.")

@

Finalmente, a representação gráfica na \autoref{fig:pred-cottonBolls2},
apresenta os valores preditos pelos modelos Poisson, COM-Poisson e
quase-Poisson com intervalos de confiança de 95\% para média. Assim como
na análise realizada na \autoref{sec:analise-cottonBolls}, os valores
preditos com bandas de confiança obtidos dos modelos COM-Poisson e
quase-Poisson, são idênticos, levando às mesmas interpretações.

Com esse segundo exemplo de subdispersão, em que três contagens foram
realizados em um único experimento. A flexibilidade do modelo
COM-Poisson, no que tange à característica de subdispersão, ganha
destaque uma vez que seus resultados (predições pontuais e intervalares
e testes de hipóteses para comparação de modelos) se equivalem a uma
abordagem bastante flexível baseado na especificação de momentos.

\section{Análise de produção de soja sob efeito de umidade e adubação
  potássica}
\label{sec:analise-soyaBeans}

<<ajuste-soyaBeans, include=FALSE, cache=TRUE>>=

## Dados
library(cmpreg)
data(soyaBeans)
soyaBeans <- soyaBeans[-74, ]
soyaBeans <- transform(soyaBeans, K = factor(K))

##-------------------------------------------
## Para o número de vagens viáveis por parcela

## Preditores considerados

f1.nv <- nvag ~ bloc + umid + K
f2.nv <- nvag ~ bloc + umid * K

f1.ng <- ngra ~ bloc + umid + K
f2.ng <- ngra ~ bloc + umid * K

## Ajustando os modelos Poisson
m1P.nv <- glm(f1.nv, data = soyaBeans, family = poisson)
m2P.nv <- glm(f2.nv, data = soyaBeans, family = poisson)

m1P.ng <- glm(f1.ng, data = soyaBeans, family = poisson)
m2P.ng <- glm(f2.ng, data = soyaBeans, family = poisson)

## Ajustando os modelos COM-Poisson
m1C.nv <- cmp(f1.nv, data = soyaBeans, sumto = 300)
m2C.nv <- cmp(f2.nv, data = soyaBeans, sumto = 300)

m1C.ng <- cmp(f1.ng, data = soyaBeans, sumto = 700)
m2C.ng <- cmp(f2.ng, data = soyaBeans, sumto = 700)

## Ajustando os modelos Binomial Negativo
library(MASS)
m1B.nv <- glm.nb(f1.nv, data = soyaBeans)
m2B.nv <- glm.nb(f2.nv, data = soyaBeans)

m1B.ng <- glm.nb(f1.ng, data = soyaBeans)
m2B.ng <- glm.nb(f2.ng, data = soyaBeans)

## Ajustando os modelos Quase-Poisson
m1Q.nv <- glm(f1.nv, data = soyaBeans, family = quasipoisson)
m2Q.nv <- glm(f2.nv, data = soyaBeans, family = quasipoisson)

m1Q.ng <- glm(f1.ng, data = soyaBeans, family = quasipoisson)
m2Q.ng <- glm(f2.ng, data = soyaBeans, family = quasipoisson)

##======================================================================
## Perfil de log-verossimilhanca para o parametro phi
prof.nv <- profile(m2C.nv, which = "phi")
prof.ng <- profile(m2C.ng, which = "phi")

@

Nesse experimento, mais de uma variável de interesse em forma de
contagens é mensurada. Pela descrição dos dados, realizada na
\autoref{sec:soyaBeans}, características relacionadas a dispersão da
contagem são distintas em ambas as variáveis (equidispersão e
superdispersão). Dos modelos apresentados no
\autoref{cap:modelos-para-dados-de-contagem}, o Poisson, COM-Poisson,
binomial-negativo são as distribuições a serem consideradas. As
variáveis de interesse, números de grãos de soja e de vagens viáveis,
foram contabilizados por unidade experimental (vaso com duas plantas) e
estão sob o efeito, controlado dos níveis de adubação potássica (0, 30,
60, 120 e 180 mg dm$^{-3}$) e dos níveis de umidade do solo
(37.5, 50 e 62.5\%), que foram considerados na análise como fatores
com 5 e 3 níveis respectivamente. Ainda tem-se, pela condução do
experimento, o efeito relacionado a blocagem realizada, foram cinco
blocos utilizados para controle de variação local. Os preditores
considerados são
\begin{itemize}
  \setlength\itemsep{-0.6cm}
\item[] Preditor 1:
  $\eta_1 = g(\mu_{ijk}) = \beta_0 + \tau_i + \gamma_j + \delta_k $ \\
\item[] Preditor 2:
  $\eta_2 = g(\mu_{ijk}) = \beta_0 + \tau_i + \gamma_j + \delta_k +
  \alpha_{jk}$
\end{itemize}
em que $\tau_i$ é o efeito do i-ésimo bloco ($i=$1: bloco II, 2: bloco
III, 3: bloco IV e 4: V), $\gamma_j$ o efeito do j-ésimo nível de
umidade aplicado ($j=$1: 50\% e 2: 62,5\%), $\delta_k$ o efeito do
k-ésimo nível de adubação potássica ($k=$ 1: 30, 2: 60, 3: 20 e 4: 180
mg dm$^{-3}$) e $\alpha_{jk}$ o efeito da interação entre o j-ésimo
nível de umidade do solo e o k-ésimo nível de adubação potássica. No
modelo mais completo, com interação, são 19 parâmetros de locação a
serem estimados.

Para ajuste dos modelos COM-Poisson nesse exemplo, o tempo computacional
foi ligeiramente maior com relação aos exemplos anteriores. Isso se deve
ao fato das contagens serem elevadas (variando entre
\Sexpr{paste(range(soyaBeans[ , "ngra"]), collapse=" e ")} para o número
de grãos e \Sexpr{paste(range(soyaBeans[ , "nvag"]), collapse=" e ")}
para o número de vagens) e superdispersas ($\phi<0$). Nesse cenário, os
incrementos da constante normalizadora $Z(\lambda_i, \nu = \exp(\phi))$,
\autoref{eqn:constante-z}, convergem para 0 mais lentamente.

<<convergez-soyaBeans, fig.height=3, fig.width=6.7, fig.cap="Convergência das constantes de normalização para cada indivíduo no modelo para o número de vagens viáveis (esquerda) e para o número de grãos produzidos (direita)">>=

##-------------------------------------------
## Constante normalizadora

## Para nvag
lam.nv <- predict(m2C.nv)
zs.nv <- sapply(lam.nv, function(l) {
    funZ(exp(l), exp(m2C.nv@coef[1]), maxit = 1000, tol = 0.001)
})
names(zs.nv) <- 1:nrow(soyaBeans)
const.nv <- plyr::ldply(zs.nv)

## Para ngra
lam.ng <- predict(m2C.ng)
zs.ng <- sapply(lam.ng, function(l) {
    funZ(exp(l), exp(m2C.ng@coef[1]), maxit = 1000, tol = 0.001)
})
names(zs.ng) <- 1:nrow(soyaBeans)
const.ng <- plyr::ldply(zs.ng)

## Empilhando
const.all <- rbind(data.frame(const.nv, var = "nv"),
                   data.frame(const.ng, var = "ng"))

xyplot(z ~ j | var, data = const.all,
       type = c("l", "g"),
       scales = "free",
       ylab = list(
           expression(frac(lambda[i]^j, "(j!)"^nu)),
           rot = 0),
       strip = strip.custom(
           factor.levels = c("Número de vagens", "Número de grãos")),
       sub = "Fonte: Elaborado pelo autor.")

## Valores para nvag
index.nv <- which.max(table(const.nv$.id))
nterm.nv <- table(const.nv$.id)[index.nv]
obs.nv <- names(table(const.all$.id))[index.nv]
soma.nv <- max(aggregate(z ~ .id, sum, data = const.nv)$z)
lambda.nv <- lam.nv[as.numeric(obs.nv)]


## Valores para ngra
index.ng <- which.max(table(const.ng$.id))
nterm.ng <- table(const.ng$.id)[index.ng]
obs.ng <- names(table(const.all$.id))[index.ng]
soma.ng <- max(aggregate(z ~ .id, sum, data = const.ng)$z)
lambda.ng <- lam.ng[as.numeric(obs.ng)]

@

Na \autoref{fig:convergez-soyaBeans}, são exibidos os termos dessa
constante para cada observação nos modelos mais complexos (com
interação), para o número de vagens e para o número de grãos. O critério
de convergência adotado foi $\lambda^j/(j!)^\nu < 1 \times 10^{-3}$. No
modelo para número de vagens o maior valor para a constante foi de
\Sexpr{soma.nv}, soma de \Sexpr{nterm.nv} termos, calculados para a
observação \Sexpr{obs.nv}, cujo valor estimado de $\lambda$,
$\hat{\lambda} = \Sexpr{lambda.nv}$, foi o maior. Nesse o modelo o
parâmetro $\phi$ foi estimado em \Sexpr{m2C.nv@coef[1]}. Já no modelo
para o número de grãos, foram necessários \Sexpr{nterm.ng} termos que,
somados, resultaram em \Sexpr{soma.ng}, maior constante calculada. Isso
também se deu para observação \Sexpr{obs.ng}, que, para este modelo com
$\hat{\phi} = \Sexpr{m2C.ng@coef[1]}$, estimou-se o parâmetro $\lambda$
em \Sexpr{lambda.ng}.

<<loglik-soyaBeans, include=FALSE>>=

## Análise de desvios dos modelos
anP.nv <- myanova(m1P.nv, m2P.nv)
anC.nv <- myanova(m1C.nv, m2C.nv)
anB.nv <- myanova(m1B.nv, m2B.nv)
anQ.nv <- myanova(m1Q.nv, m2Q.nv)

anP.ng <- myanova(m1P.ng, m2P.ng)
anC.ng <- myanova(m1C.ng, m2C.ng)
anB.ng <- myanova(m1B.ng, m2B.ng)
anQ.ng <- myanova(m1Q.ng, m2Q.ng)

## Tabelas com medidas de ajuste
tab.nv <- rbind(
    anP.nv[, c("np", "ll", "AIC", "P(>Chisq)")],
    anC.nv[, c("np", "ll", "AIC", "P(>Chisq)")],
    anB.nv[, c("np", "ll", "AIC", "P(>Chisq)")],
    anQ.nv[, c("np", "dev", "AIC", "P(>F)")])

tab.ng <- rbind(
    anP.ng[, c("ll", "AIC", "P(>Chisq)")],
    anC.ng[, c("ll", "AIC", "P(>Chisq)")],
    anB.ng[, c("ll", "AIC", "P(>Chisq)")],
    anQ.ng[, c("dev", "AIC", "P(>F)")])

## Obtem as estimativas dos parâmetros de dispersão/precisão
dispersions.nv <- c(
    c(rep(NA, 2)),
    sapply(list(m1C.nv, m2C.nv), function(m) coef(m)[1]),
    sapply(list(m1B.nv, m2B.nv), function(m) m$theta),
    sapply(list(m1Q.nv, m2Q.nv), function(m) summary(m)$dispersion))

dispersions.ng <- c(
    c(rep(NA, 2)),
    sapply(list(m1C.ng, m2C.ng), function(m) coef(m)[1]),
    sapply(list(m1B.ng, m2B.ng), function(m) m$theta),
    sapply(list(m1Q.ng, m2Q.ng), function(m) summary(m)$dispersion))

## Adicionando os parametros de dispersão à tabela
tab.nv <- cbind(tab.nv, dispersions.nv)
tab.ng <- cbind(tab.ng, dispersions.ng)
rownames(tab.ng) <- rownames(tab.nv) <- NULL

## Juntando as tabelas
tab.ajuste <- data.frame(pred = rep(paste0("$\\eta_", 1:2, "$"), 4))
tab.ajuste <- cbind(tab.ajuste, as.data.frame(cbind(tab.nv, tab.ng)))

pvals <- paste(round(cmptest(m1C.nv, m2C.nv)[, 2], 3), collapse = "e")
@

Medidas de qualidade de ajuste calculadas sob os modelos Poisson,
COM-Poisson, binomial negativo e quase-Poisson são apresentadas na
\autoref{tab:ajuste-soyaBeans}. Considerando a variável resposta número
de vagens viáveis, não há indícios de afastamento da equidispersão
indicados i) pelos parâmetros extras dos modelos alternativos ao
Poisson, em que as estimativas $\hat{\phi}$ e $\hat{\sigma^2}$ estão
próximas dos valores 0 e 1, que compreendem o caso particular Poisson
nos modelos COM-Poisson e quase-Poisson respectivamente e $\hat{\theta}$
é um valor bastante elevado (lembre-se que a binomial negativa se reduz
à Poisson quando $\theta \to \infty$); e ii) pelas log-verossimilhanças
dos modelos paramétricos que resultaram em valores muito próximos; iii)
pelos valores de AIC que foram menores nos modelos Poisson, mostrando
que não há ganho expressivo quando estimados os parâmetros de dispersão
nos modelos alternativos. Os valores de $p$ associados ao TRV entre os
modelos COM-Poisson e Poisson com preditores 1 e 2 foram \Sexpr{pvals},
evidenciando que são contagens equidispersas.

<<prof-soyaBeans, fig.height=2.7, fig.width=5.5, out.width="0.8\\linewidth", fig.cap="Perfis de log-verossimilhança para o parâmetro de precisão da COM-Poisson nos modelos para número de vagens viáveis por parcela (esquerda) e número grãos de soja por parcela (direira).">>=

##======================================================================
## Causa
da.nv <- as.data.frame(prof.nv)
da.ng <- as.data.frame(prof.ng)
##
levels(da.nv$param) <- "phi2"
levels(da.ng$param) <- "phi3"
##
vars <- c("param", "z", "focal")
da.soya <- rbind(da.nv[, vars], da.ng[, vars])
##
cols <- trellis.par.get("superpose.line")$col[1:2]
xyplot(abs(z) ~ focal | param, data = da.soya,
       layout = c(NA, 1),
       scales = list(x = "free"),
       subset = abs(z) < 3.5,
       type = c("l", "g"),
       strip = strip.custom(
           factor.levels = c(
               "Nº de vagens",
               "Nº de grãos")),
       ylab = expression(abs(z)~~(sqrt(~Delta~"deviance"))),
       xlab = expression(phi),
       panel = function(x, y, subscripts, ...) {
           conf <- c(0.9, 0.95, 0.99)
           hl <- sqrt(qchisq(conf, 1))
           ##-------------------------------------------
           mle <- x[y == 0]
           xl <- x[x < mle]; yl <- y[x < mle]
           xr <- x[x > mle]; yr <- y[x > mle]
           ##-------------------------------------------
           funleft <- approxfun(x = yl, y = xl)
           funright <- approxfun(x = yr, y = xr)
           vxl <- funleft(hl)
           vxr <- funright(hl)
           vz <- c(hl, hl)
           ##-------------------------------------------
           panel.xyplot(x, y, ...)
           panel.arrows(c(vxl, vxr), 0, c(vxl, vxr), vz,
                        code = 1, length = 0.1, lty = 2,
                        col = "gray40")
           panel.segments(vxl, vz, vxr, vz, lty = 2,
                          col = "gray40")
           panel.abline(h = 0, v = mle, lty = 3)
           panel.text(x = rep(mle, 2), y = vz+0.1,
                      labels = paste(conf*100, "%"),
                      col = "gray20")
           panel.abline(v = 0, col = cols[2])
       }, sub = "Fonte: Elaborado pelo autor.")

@


Na figura \autoref{fig:prof-soyaBeans} (à esquerda), são
apresentados os intervalos de confiança baseados no perfil de
verossimilhança para $\phi$, no modelo COM-Poisson com efeito de
interação. Como esses intervalos contém o valor 0, da hipótese nula, o
modelo COM-Poisson pode ser reduzido ao Poisson. Para avaliação dos
preditores, novamente tem-se um caso de valores próximos ao nível de
significância nominal de 0,05. Nas análises a seguir o modelo mais
completo, com a interação entre adubação e umidade, é considerado.

\begin{table}[ht]
\centering
\small
\caption{Medidas de ajuste para avaliação e comparação entre preditores
  e modelos ajustados ao número de vagens e ao número de grão por parcela}
\label{tab:ajuste-soyaBeans}
\begin{tabular}{lccccccccc}
  \toprule
  & & \multicolumn{4}{c}{{\bfseries Número de vagens}} & \multicolumn{4}{c}{{\bfseries Número de grãos}} \\
  \cmidrule(lr){3-6} \cmidrule(lr){7-10}
{PO} & np & $\ell$ & AIC & P($>\rchi^2$) &  & $\ell$ & AIC & P($>\rchi^2$) & \\
  \midrule
<<tab-soyaBeans1, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 4, 3,  2, 2, -2, 3)
print.xtable(xtable(tab.ajuste[1:2, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
{CP} & np & $\ell$ & AIC & P($>\rchi^2$) & $\hat{\phi}$ & $\ell$ & AIC & P($>\rchi^2$) & $\hat{\phi}$ \\
  \midrule
<<tab-soyaBeans2, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 4, 3,  2, 2, 4, 4)
print.xtable(xtable(tab.ajuste[3:4, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
{BN} & np & $\ell$ & AIC & P($>\rchi^2$) & $\hat{\theta}$ & $\ell$ & AIC & P($>\rchi^2$) & $\hat{\theta}$ \\
  \midrule
<<tab-soyaBeans3, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 4, -1,  2, 2, 4, -1)
print.xtable(xtable(tab.ajuste[5:6, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
{QP} & np & $\ell$ & AIC & P($>\rchi^2$) & $\hat{\sigma^2}$ & $\ell$ & AIC & P($>\rchi^2$) & $\hat{\sigma^2}$ \\
  \midrule
<<tab-soyaBeans4, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 4, 3, 2, 2, 4, 3)
print.xtable(xtable(tab.ajuste[7:8, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
   \bottomrule
\end{tabular}
\begin{tablenotes}
  \footnotesize
\item np, número de parâmetros; PO, Poisson; CP, COM-Poisson; BN,
  binomial negativo; e QP, quase-Poisson.
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

Na tabela \autoref{tab:ajuste-soyaBeans} (resultados à direita), são
apresentados as medidas de ajuste para os modelos considerados para o
número de grãos por parcela. Neste caso, há evidências de superdispersão,
pois as estimativas dos parâmetros $\phi$ e $\sigma^2$ foram menor que
zero e maior que 1, respectivamente. Os valores de AIC foram menores e
as avaliações da log-verossimilhança maiores, nos modelos paramétricos
alternativos ao Poisson, quando comparados ao Poisson. Na
\autoref{fig:prof-soyaBeans} à direita, a verossimilhança perfilhada em
$\phi$ é apresentada com indicação dos intervalos de confiança e estes
não contém o valor zero.

A visualização das covariâncias entre as estimativas dos parâmetros no
modelo COM-Poisson para o número de vagens por parcela é apresentada na
\autoref{fig:corr-soyaBeansa} e, para o número de grãos por parcela na
\autoref{fig:corr-soyaBeansb}. Em ambos os casos, a correlação entre os
estimadores para os parâmetros de regressão ($\beta$'s) e dispersão
($\phi$) ganha destaque, pois há uma forte correlação, principalmente
entre $\hat{\phi}$ e $\hat{\beta}_0$.

<<corr-soyaBeansa, fig.height=7, fig.width=7, fig.cap="Imagem da matriz de correlação entre os parâmetros do modelo COM-Poisson ajustados ao número de vagens por parcela.">>=

pnames <- sprintf(":hat(%s",
                  c("phi)", "beta[0])",
                    paste0("tau[", 1:4, "])"),
                    paste0("gamma[", 1:2, "])"),
                    paste0("delta[", 1:4, "])"),
                    paste0("alpha[", 1:8, "])")))

Vcov <- vcov(m2C.nv)
Corr.nv <- cov2cor(Vcov)
dimnames(Corr.nv) <- list(pnames, pnames)
mycorrplot(Corr.nv, number.cex = 0.8)

fonte("Fonte: Elaborado pelo autor.")

@

<<corr-soyaBeansb, fig.height=7, fig.width=7, fig.cap="Imagem da matriz de correlação entre os parâmetros do modelo COM-Poisson ajustados ao número de grãos por parcela.">>=

pnames <- sprintf(":hat(%s",
                  c("phi)", "beta[0])",
                    paste0("tau)[", 1:4, "]"),
                    paste0("gamma)[", 1:2, "]"),
                    paste0("delta)[", 1:4, "]"),
                    paste0("alpha)[", 1:8, "]")))

Vcov <- vcov(m2C.ng)
Corr.ng <- cov2cor(Vcov)
dimnames(Corr.ng) <- list(pnames, pnames)
mycorrplot(Corr.ng, number.cex = 0.8)

fonte("Fonte: Elaborado pelo autor.")

@

Na \autoref{fig:pred-soyaBeans}, são apresentadas as médias calculadas
com intervalos de confiança 95\% sob os modelos Poisson, COM-Poisson,
binomial-negativo e quase-Poisson, considerando efeito de interação
entre os níveis de umidade do solo e adubação potássica. Tomou-se o
efeito médio de bloco, uma vez que esse efeito aditivo não é de
interesse prático.

<<pred-soyaBeans, fig.height=4.5, fig.width=7.2, fig.cap="Valores preditos com intervalos de confiança (95\\%) como função do nível de adubação com potássio e do percentual de umidade do solo para cada variável de interesse mensurada (número de vagens e número de grãos por parcela).">>=

library(multcomp)

## Predição pontual/intervalar
pred <- with(soyaBeans,
             expand.grid(
                 bloc = factor(levels(bloc)[1], levels = levels(bloc)),
                 umid = levels(umid),
                 K = levels(K)
             ))

## Matrix de delineamento para predição, considera o efeito médio de
## bloco
X <- model.matrix(~bloc + umid * K, data = pred)
bl <- attr(X, "assign") == 1
X[, bl] <- X[, bl] * 0 + 1/(sum(bl) + 1)


##======================================================================
## Considerando a Poisson
##-------------------------------------------
## Para nv
aux <- exp(confint(glht(m2P.nv, linfct = X),
               calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Poisson", aux)
predP.nv <- cbind(var = "nvag", pred, aux)
##-------------------------------------------
## Para ng
aux <- exp(confint(glht(m2P.ng, linfct = X),
               calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Poisson", aux)
predP.ng <- cbind(var = "ngra", pred, aux)
##
predP <- rbind(predP.nv, predP.ng)

##======================================================================
## Considerando a COM-Poisson
##-------------------------------------------
## Para nv
aux <- predict(m2C.nv, newdata = X, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux[, c("fit", "lwr", "upr")])
predC.nv <- cbind(var = "nvag", pred, aux)
##-------------------------------------------
## Para ng
aux <- predict(m2C.ng, newdata = X, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux[, c("fit", "lwr", "upr")])
predC.ng <- cbind(var = "ngra", pred, aux)
##
predC <- rbind(predC.nv, predC.ng)

##======================================================================
## Considerando a Binomial Negativa
##-------------------------------------------
## Para nv
aux <- family(m2B.nv)$linkinv(
                         confint(glht(m2B.nv, linfct = X),
                                 calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Binomial Negativa", aux)
predB.nv <- cbind(var = "nvag", pred, aux)
##-------------------------------------------
## Para ng
aux <- family(m2B.ng)$linkinv(
                         confint(glht(m2B.ng, linfct = X),
                                 calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Binomial Negativa", aux)
predB.ng <- cbind(var = "ngra", pred, aux)
##
predB <- rbind(predB.nv, predB.ng)

##======================================================================
## Considerando a Quase-Poisson
##-------------------------------------------
## Para nv
aux <- exp(confint(glht(m2Q.nv, linfct = X),
                   calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ.nv <- cbind(var = "nvag", pred, aux)
##-------------------------------------------
## Para ng
aux <- exp(confint(glht(m2Q.ng, linfct = X),
                   calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ.ng <- cbind(var = "ngra", pred, aux)
##
predQ <- rbind(predQ.nv, predQ.ng)

##-------------------------------------------
pred.all <- rbind(predP, predC, predB, predQ)
pred.all <- pred.all[with(pred.all, order(var, umid, K, modelo)), ]

##======================================================================
##-------------------------------------------
## Gráfico com os valores preditos
data(soyaBeans)
soyaBeans <- soyaBeans[-74, ] ## outlier identificado
soyaBeans <- soyaBeans[, c("K", "umid", "bloc", "ngra", "nvag")]

da <- reshape2::melt(
    soyaBeans, id = c("K", "umid", "bloc"),
    variable.name = "var", value.name = "count")

key <- list(type = "o", divide = 1,
            columns = 2,
            lines = list(pch = 1:nlevels(pred.all$model) + 4,
                         cex = 0.8),
            text = list(c("Poisson", "COM-Poisson",
                          "Binomial Negativa", "Quase-Poisson"))
            )

useOuterStrips(
    segplot(
        K ~ lwr + upr | umid + var,
        key = key,
        axis = axis.grid,
        ylab = "Contagens",
        xlab = "Nível de adubação Potássica",
        centers = fit, groups = modelo, data = pred.all,
        horizontal = FALSE, draw = FALSE,
        lwd = 1.5, pch = 1:nlevels(pred.all$modelo) + 4,
        panel = panel.groups.segplot, as.table = TRUE,
        gap = 0.3, cex = 0.8,
        scales = list(
            y = list(relation = "free", rot = 0))
    ), strip = strip.custom(
           strip.names = TRUE, var.name = "Umidade"),
    strip.left = strip.custom(
        factor.levels = c("Nº de vagens", "Nº de grãos"))
)

## ## as.layer() não funciona quando usado duas variaveis para strip
## xyplot(count ~ factor(K) | umid, data = da,
##        key = key,
##        type = c("p", "g"),
##        alpha = 0.3,
##        scales = list(
##            y = list(relation = "free", rot = 0))
##        )

fonte.xy("Fonte: Elaborado pelo autor.")

@

Para a contagem do número de vagens, observa-se intervalos com
comprimento muito parecidos, ligeiramente menores para o caso
COM-Poisson e binomial negativo. Para a contagem do número de grãos por
parcela, um caso superdisperso, percebe-se que o modelo Poisson nos leva
a uma falsa precisão, uma vez que os intervalos são menores não pelo
modelo se ajustar melhor aos dados, mas sim por subestimar a
variabilidade. Para as formulações alternativas, obteve-se intervalos de
confiança menores nos modelos paramétricos quando comparados com os
intervalos obtidos da abordagem quase-Poisson. Isso é razoável, pois nos
modelos quase-Poisson somente a especificação de dois momentos é feita,
enquanto que nos paramétricos especifica-se a distribuição completa,
ganhando informação (ver \autoref{eqn:quasi-informacao}). De forma
geral, os intervalos sob os modelos COM-Poisson e binomial negativo são
fiéis a variabilidade inerente ao processo.

\section{Análise de ninfas de mosca-branca em lavoura de soja}
\label{sec:analise-whiteFly}

<<ajuste-whiteFly, include=FALSE, cache=TRUE>>=

data(whiteFly)
whiteFly <- droplevels(subset(whiteFly, grepl("BRS", x = cult)))
whiteFly$aval <- factor(whiteFly$dias)

## Preditores considerados
f1 <- ntot ~ bloco + cult + aval
f2 <- ntot ~ bloco + cult * aval

## Ajustando os modelos Poisson
m1P.ntot <- glm(f1, data = whiteFly, family = poisson)
m2P.ntot <- glm(f2, data = whiteFly, family = poisson)

## Ajustando os modelos COM-Poisson
m1C.ntot <- cmp(f1, data = whiteFly, sumto = 800)
m2C.ntot <- cmp(f2, data = whiteFly, sumto = 800)

## Ajustando os modelos Binomial Negativo
library(MASS)
m1B.ntot <- glm.nb(f1, data = whiteFly)
m2B.ntot <- glm.nb(f2, data = whiteFly)

## Ajustando os modelos Quase-Poisson
m1Q.ntot <- glm(f1, data = whiteFly, family = quasipoisson)
m2Q.ntot <- glm(f2, data = whiteFly, family = quasipoisson)

##======================================================================
## Perfil de log-verossimilhanca para o parametro phi
prof.ntot <- profile(m1C.ntot, which = "phi")

@

Nesse experimento também há fortes indícios de superdispersão, conforme
visto na \autoref{sec:whiteFly}. Assim os modelos Poisson,
COM-Poisson, binomial negativo e quase-Poisson foram aplicados. A
variável em estudo é a contagem da quantidade de ninfas de mosca-branca
nos folíolos de plantas de soja ao longo dos dias em diferentes
cultivares. Como o experimento foi conduzido sob delineamento de blocos
casualizados, os efeitos de bloco são considerados no modelo. As
covariáveis foram tratadas como fator, assim como na aplicação anterior,
com seis níveis para o número de dias decorridos a partir da primeira
avaliação e quatro níveis para o fator cultivar de soja. Os preditores
em comparação são:
\begin{itemize}
  \setlength\itemsep{-0.6cm}
\item[] Preditor 1:
  $\eta_1 = g(\mu_{ijk}) = \beta_0 + \tau_i + \gamma_j + \delta_k $ \\
\item[] Preditor 2:
  $\eta_2 = g(\mu_{ijk}) = \beta_0 + \tau_i + \gamma_j + \delta_k +
  \alpha_{jk}$
\end{itemize}
em que $\tau_i$ é o efeito do i-ésimo bloco ($i=$1: bloco II, 2: bloco
III, 3: bloco IV e 4: V), $\gamma_j$ o efeito da j-ésima cultivar
($j=$1: BRS 243 RR, 2: BRS 245 RR e 3: BRS 246 RR), $\delta_k$ o efeito
do k-ésimo nível do número de dias após o início do experimento ($k=$1:
8, 2: 13, 3: 22, 4: 31 e 5: 38 dias) e $\alpha_{jk}$ o efeito da
interação entre a j-ésima cultivar e o k-ésimo nível do número de dias
após o início do experimento. A avaliação do efeito de interação é de
interesse prático, pois informa se há um padrão distinto na quantidade
de ninfas ao longo do tempo entre as cultivares. No modelo com
interação, 27 parâmetros de locação devem ser estimados.

<<convergez-prof-whiteFly, fig.height=3, fig.width=6.5, fig.cap="Convergência das constantes de normalização para cada indivíduo (direita) e perfil de log-verossimilhança para o parâmetro extra da COM-Poisson (esquerda) no modelo para o número de ninfas de Mosca-branca.">>=

##-------------------------------------------
## Constante normalizadora

## Para nvag
lam.ntot <- predict(m2C.ntot)
zs.ntot <- sapply(lam.ntot, function(l) {
    funZ(exp(l), exp(m2C.ntot@coef[1]), maxit = 1500, tol = 0.001)
})
names(zs.ntot) <- 1:nrow(whiteFly)
const.ntot <- plyr::ldply(zs.ntot)
const.ntot <- rbind(data.frame(const.ntot, var = "ntot"))

## Valores para ntot
index.ntot <- which.max(table(const.ntot$.id))
nterm.ntot <- table(const.ntot$.id)[index.ntot]
obs.ntot <- names(table(const.all$.id))[index.ntot]
soma.ntot <- max(aggregate(z ~ .id, sum, data = const.ntot)$z)
lambda.ntot <- lam.ntot[as.numeric(obs.ntot)]

xy1 <- xyplot(z ~ j | var, data = const.ntot,
             type = c("l", "g"),
             scales = "free",
             ylab = list(
                 expression(frac(lambda[i]^j, "(j!)"^nu)),
                 rot = 0),
             strip = strip.custom(
                 factor.levels = expression("Incrementos "~Z[j])),
             par.settings = ps.sub)

##-------------------------------------------
## Perfil de log-verossimilhanca para phi
xy2 <- myprof(prof.ntot,
              namestrip = expression("Perfil para "~phi),
              subset = 4, par.settings = ps.sub)

print(xy1, split = c(1, 1, 2, 1), more = TRUE)
print(xy2, split = c(2, 1, 2, 1), more = FALSE)
fonte.xy("Fonte: Elaborado pelo autor.")

@

Assim como na aplicação superdispersa apresentada na
\autoref{sec:analise-soyaBeans}, nesse exemplo tem-se um cenário com
contagens elevadas (variando entre \Sexpr{paste(range(soyaBeans[ ,
  "ngra"]), collapse=" e ")}) e ainda superdispersas (parâmetros $\phi$
estimados próximos à -3). Isso torna a convergência da função
$Z(\lambda_i, \nu = \exp(\phi))$ demorada e o valor dessa constante, que
normaliza a densidade, é altíssimo para a maioria das
observações. Considerando o modelo com interação, pode-se visualizar os
termos, que somados compõem a constante $Z$, para cada observação, à
esquerda da \autoref{fig:convergez-prof-whiteFly}. Para a observação
\Sexpr{obs.ntot} tem-se o maior valor calculado da constante $Z$,
\Sexpr{soma.ntot}. Para obtenção desse valor \Sexpr{nterm.ntot} termos
foram necessários, conforme exibido no eixo $x$ do gráfico.

Em problemas com contagens altas e comportamento muito superdisperso a
obtenção da constante $Z$ pode se tornar proibitiva computacionalmente,
devido ao problema de \textit{overflow} (valores que ultrapassam o
limite de capacidade de cálculo da máquina) e, consequentemente, o
modelo COM-Poisson não se ajusta.

<<loglik-whiteFly, include=FALSE>>=

## Análise de desvios dos modelos
anP.ntot <- myanova(m1P.ntot, m2P.ntot)
anC.ntot <- myanova(m1C.ntot, m2C.ntot)
anB.ntot <- myanova(m1B.ntot, m2B.ntot)
anQ.ntot <- myanova(m1Q.ntot, m2Q.ntot)

## Tabelas com medidas de ajuste
tab.ntot <- rbind(anP.ntot, anC.ntot, anB.ntot, anQ.ntot)

## Obtem as estimativas dos parâmetros de dispersão/precisão
dispersions.ntot <- c(
    c(rep(NA, 2)),
    sapply(list(m1C.ntot, m2C.ntot), function(m) coef(m)[1]),
    sapply(list(m1B.ntot, m2B.ntot), function(m) m$theta),
    sapply(list(m1Q.ntot, m2Q.ntot), function(m) summary(m)$dispersion))

## Adicionando os parametros de dispersão à tabela
tab.ntot <- cbind(tab.ntot, dispersions.ntot)
rownames(tab.ntot) <- NULL

## Juntando as tabelas
tab.ajuste <- data.frame(
    pred = rep(paste("Preditor", 1:2), 4),
    tab.ntot)

@

Nesse exemplo, os modelos COM-Poisson convergiram e seus resultados são
exibidos na \autoref{tab:ajuste-whiteFly} em conjunto com os resultados
do ajuste dos modelos Poisson, binomial negativo e quase-Poisson. Todas
as estimativas dos parâmetros extras nos modelos alternativos ao Poisson
$\hat{\phi}$, $\hat{\theta}$ e $\hat{\sigma^2}$ indicam expressivamente
superdispersão. Em benefício dos modelos alternativos, tem-se todas as
medidas apresentadas indicando uma substancial melhora de
ajuste. Destaque para a magnitude dessas evidências, em que, por
exemplo, o AIC obtido dos modelos alternativos é em torno de 0,47 vezes
o AIC obtido do Poisson.

\begin{table}[ht]
\centering
\small
\caption{Medidas de ajuste para avaliação e comparação entre preditores
  e modelos ajustados}
\label{tab:ajuste-whiteFly}
\begin{tabular}{lcccccrcr}
  \toprule
 Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) &  \\
  \midrule
<<tab-whiteFly1, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, -2, 3)
print.xtable(xtable(tab.ajuste[1:2, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
 COM-Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & $\hat{\phi}$  \\
  \midrule
<<tab-whiteFly2, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, 4, 3)
print.xtable(xtable(tab.ajuste[3:4, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
 Binomial neg. & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & $\hat{\theta}$ \\
  \midrule
<<tab-whiteFly3, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, 4, 3)
print.xtable(xtable(tab.ajuste[5:6, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
 Quase-Poisson & np & deviance & AIC & F & diff np & P(>F) & $\hat{\sigma}^2$  \\
  \midrule
<<tab-whiteFly4, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, 4, 3)
print.xtable(xtable(tab.ajuste[7:8, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
  \bottomrule
\end{tabular}
\begin{tablenotes}
  \footnotesize
\item np, número de parâmetros; diff $\ell$, diferença entre
  log-verossimilhanças; F, estatística F baseada nas quase-deviances;
  diff np, diferença entre o np.
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

Para tomada de decisão e significância dos efeitos, observa-se que o
modelo Poisson é claramente inadequado. Para avaliação dos preditores,
na \autoref{tab:ajuste-whiteFly}, o modelo Poisson indica (com uma
significância inferior a $1 \times 10^{-10}$) que há efeito de interação
entre os dias decorridos da primeira avaliação e as cultivares ao passo
que, nos modelos alternativos, esse efeito é marcadamente não
significativo. Essa discordância se deve, conforme já discutido, ao fato
de o modelo Poisson subestimar a variabilidade por sua restrição de
equidispersão. Assim, com variâncias menores, qualquer efeito acrescido
ao modelo passará por significativo.

Enfatizando a superdispersão indicada pelo modelo COM-Poisson e
considerando o preditor de efeitos aditivos, tem-se o perfil de
verossimilhança para o parâmetro $\phi$ apresentado na
\autoref{fig:convergez-prof-whiteFly}. Pode-se observar que os limites
inferiores dos intervalos de confiança de 99, 95 e 90\% estão muito
distantes do valor 0, sob o qual os modelos Poisson e COM-Poisson são
equivalentes. Outra característica desse gráfico é a leve assimetria à
esquerda, indicando que haverá imperfeições para inferências baseadas na
aproximação quadrática da verossimilhança.

<<corr-whiteFly, fig.width=7, fig.height=7, fig.cap="Imagem da matriz de correlação entre os parâmetros do modelo COM-Poisson.">>=

pnames <- sprintf(":hat(%s",
                  c("phi)", "beta)[0]",
                    paste0("tau)[", 1:3, "]"),
                    paste0("gamma)[", 1:3, "]"),
                    paste0("delta)[", 1:5, "]")))

Vcov <- vcov(m1C.ntot)
Corr <- cov2cor(Vcov)
dimnames(Corr) <- list(pnames, pnames)
mycorrplot(Corr)

fonte("Fonte: Elaborado pelo autor.")

@

As covariâncias entre os estimadores dos parâmetros no modelo
COM-Poisson também são apresentadas, conforme descrição do preditor 1,
na \autoref{fig:corr-whiteFly}, sob a escala de correlação. Similarmente
as análises anteriores, observa-se a alta correlação entre $\hat{\phi}$
e os demais parâmetros de regressão. A soma dos valores absolutos das
correlações observadas entre $\hat{\phi}$ e as demais estimativas é de
\Sexpr{sum(abs(Corr[1, ]))} e a média \Sexpr{mean(abs(Corr[1, ]))}.

<<pred-whiteFly, fig.height=4, fig.width=7.5, fig.cap="Valores preditos com intervalos de confiança (95\\%) em função das cultivares de soja e da data de avaliação da planta.">>=

library(multcomp)

## Predição pontual/intervalar
pred <- with(whiteFly,
             expand.grid(
                 bloco = factor(levels(bloco)[1],
                                levels = levels(bloco)),
                 cult = levels(cult),
                 aval = levels(aval)
             ))

## Matrix de delineamento para predição, considera o efeito médio de
## bloco
X <- model.matrix(~bloco + cult + aval, data = pred)
bl <- attr(X, "assign") == 1
X[, bl] <- X[, bl] * 0 + 1/(sum(bl) + 1)

##-------------------------------------------
## Considerando a Poisson
aux <- exp(confint(glht(m1P.ntot, linfct = X),
               calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Poisson", aux)
predP <- cbind(pred, aux)

##-------------------------------------------
## Considerando a COM-Poisson
aux <- predict(m1C.ntot, newdata = X, type = "response",
               interval = "confidence")
aux <- data.frame(modelo = "COM-Poisson", aux[, c("fit", "lwr", "upr")])
predC <- cbind(pred, aux)

##-------------------------------------------
## Considerando a Binomial Negativa
aux <- family(m1B.ntot)$linkinv(
                      confint(glht(m1B.ntot, linfct = X),
                              calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Binomial Negativa", aux)
predB <- cbind(pred, aux)

##-------------------------------------------
## Considerando a Quase-Poisson
aux <- exp(confint(glht(m1Q.ntot, linfct = X),
                   calpha = univariate_calpha())$confint)
colnames(aux) <- c("fit", "lwr", "upr")
aux <- data.frame(modelo = "Quase-Poisson", aux)
predQ <- cbind(pred, aux)

##-------------------------------------------
pred.all <- rbind(predP, predC, predB, predQ)
pred.all <- pred.all[with(pred.all, order(cult, aval, modelo)), ]

##----------------------------------------------------------------------
## Gráfico

key <- list(type = "o", divide = 1,
            column = 2,
            lines = list(pch = 1:nlevels(pred.all$model) + 4,
                         cex = 0.8),
            text = list(c("Poisson", "COM-Poisson",
                          "Binomial Negativa", "Quase-Poisson"))
            )

## ## A escala do gráfico fica prejudicada, pois os limites do eixo y são
## ## extendidos para exibir as observações mais distantes
## xyplot(ntot ~ aval | cult,
##        data = whiteFly,
##        layout = c(NA, 1),
##        as.table = TRUE,
##        key = key,
##        alpha = 0.3,
##        type = c("p", "g"),
##        xlab = "Número de dias após o inicío do experimento",
##        ylab = "Número total de moscas-brancas",
##        par.settings = ps.sub)

segplot(
    aval ~ lwr + upr | cult,
    layout = c(NA, 1),
    xlab = "Número de dias após o inicío do experimento",
    ylab = "Número total de moscas-brancas",
    key = key,
    axis = axis.grid, cex = 0.8,
    centers = fit, groups = modelo, data = pred.all,
    horizontal = FALSE, draw = FALSE,
    lwd = 1.5, pch = 1:nlevels(pred.all$modelo) + 4,
    panel = panel.groups.segplot, gap = 0.3,
    par.settings = ps.sub)

fonte.xy("Fonte: Elaborado pelo autor.")

@

As médias, com intervalos de confiança, calculadas para cada combinação
dos níveis de dias após a primeira avaliação e cultivar de soja,
considerando os modelos Poisson, COM-Poisson, binomial-negativo e
quase-Poisson, são apresentadas na \autoref{fig:pred-whiteFly}. Para o
efeito de bloco foi considerado o efeito médio, para uma correta
comparação. Pode-se observar que o intervalo de confiança descrito pelo
modelo Poisson é quase imperceptível quando comparados aos demais,
mostrando novamente que seu uso é inadequado a esses dados. Já para as
outras alternativas não tivemos um comportamento razoavelmente similar
em todas as cultivares. Os intervalos pelos modelos quase-Poisson e
COM-Poisson foram muito similares em todos os casos e os intervalos pelo
modelo binomial negativo mais amplos, decorrente do comportamento da
relação média--variância desses modelos. Um fato interessante é que não
necessariamente as estimativas pontuais da média desses modelos
alternativos serão iguais. Isso ocorre, por construção, somente para nos
modelos Poisson e quase-Poisson. Esse exemplo ilustra na prática a
constatação desse fato. Para o modelo binomial negativo tivemos médias
visivelmente superiores que os demais para a cultivar BRS 239. Para o
modelo COM-Poisson as estimativas pontuais são aproximadamente iguais as
do modelo Poisson.

\section{Análise de captura de peixes em um parque estadual}
\label{sec:analise-fish}

<<ajuste-fish, include=FALSE, cache=TRUE>>=

## Dados
data(fish, package = "cmpreg")

## Preditores
f1 <- npeixes ~  campista + npessoas |
    campista + npessoas + ncriancas
f2 <- npeixes ~ campista + npessoas * ncriancas |
    campista + npessoas * ncriancas

## Ajustando os modelos Hurdle Poisson
library(pscl)
m1HP <- hurdle(f1, data = fish, dist = "poisson")
m2HP <- hurdle(f2, data = fish, dist = "poisson")

## Hurdle Binomial Negativo
m1HB <- hurdle(f1, data = fish, dist = "negbin")
m2HB <- hurdle(f2, data = fish, dist = "negbin")

## Ajustando os modelos Hurdle COM-Poisson
m1HC <- hurdlecmp(f1, data = fish)
m2HC <- hurdlecmp(f2, data = fish)

@

Nesse exemplo, ilustra-se a análise de um estudo observacional em que
aparentemente há uma quantidade excessiva de contagens nulas (veja a
\autoref{sec:fish}). O estudo tem por objetivo a modelagem do número de
peixes capturados por grupos de visitantes em um Parque Estadual. As
covariáveis mensuradas foram o número de pessoas no grupo (\texttt{np}),
o número de crianças (\texttt{nc}) e a indicação da presença ou não de
um campista no grupo (\texttt{ca}, 0: se não presente e 1: se presente).

Como já antecipado pela visualização e apresentação dos dados, modelos
estruturados de forma convencional, que pressupõem apenas um processo
estocástico na geração de dados, não se ajustaram adequadamente. A
seguir, a alternativa de inclusão de um efeito de barreira para acomodar
a quantidade excessiva de valores zero é apresentada. Os modelos Poisson,
binomial negativo e COM-Poisson, sob esta estruturação, são ajustados e
comparados.

O número de peixes capturados é modelado em duas partes, as contagens
nulas e as não nulas, conforme descrito na seção
\autoref{cap02:zeros}. Abaixo, define-se os preditores considerados para
as duas partes
\begin{itemize}
  \setlength\itemsep{-0.6cm}
\item[] Preditor 1: \quad $
  \begin{aligned}
    g(\mu)     &= \beta_0 + \beta_1 \textrm{ca} +
    \beta_2 \textrm{np} \\
    \textrm{logit}(\pi) &= \gamma_0 + \gamma_1 \textrm{ca} +
    \gamma_2 \textrm{np} + \gamma_3 \textrm{nc};
  \end{aligned}$ \\
\item[] Preditor 2: \quad $
  \begin{aligned}
    g(\mu)     &= \beta_0 + \beta_1 \textrm{ca} +
    \beta_2 \textrm{np} + \beta_3 \textrm{nc} +
    \beta_4 (\textrm{np} \cdot \textrm{nc}) \\
    \textrm{logit}(\pi) &= \gamma_0 + \gamma_1 \textrm{ca} +
    \gamma_2 \textrm{np} + \gamma_3 \textrm{nc} +
    \gamma_4 (\textrm{np} \cdot \textrm{nc}),
  \end{aligned}$
\end{itemize}
sendo $g(\mu)$ e $\textrm{logit}(\pi)$ as funções de ligação que
relacionam os preditores lineares com as médias dos modelos para
contagens não nulas e contagens zero, respectivamente. Os preditores
lineares foram propostos de forma aninhada. No primeiro, considera-se os
efeitos aditivos de todas as covariáveis mensuradas para a parte das
contagens nulas e efeitos aditivos do número de pessoas e de crianças
para a parte das contagens não nulas. No segundo, têm-se efeitos
aditivos de todas as covariáveis acrescido do efeito de interação entre
o número de pessoas e de crianças para ambas as partes do modelo.

<<logLik-fish, include=FALSE>>=

## Tabelas de ANOVA
anHP <- myanova(m1HP, m2HP)
anHC <- myanova(m1HC, m2HC)
anHB <- myanova(m1HB, m2HB)

## Obtem as estimativas dos parametros de dispersao
dispHC <- sapply(list(m1HC, m2HC), function(m) m@coef[1])
dispHB <- sapply(list(m1HB, m2HB), function(m) m$theta)
dispersions <- c(NA, NA, dispHB, dispHC)

## Empilhando
tab <- data.frame(pred = rep(paste("Preditor", 1:2), 3))
tab <- cbind(tab, rbind(anHP, anHB, anHC), dispersions)

@

\begin{table}[ht]
\centering
\small
\caption{Medidas de ajuste para avaliação e comparação de preditores
  e modelos com componente de barreira ajustados}
\label{tab:ajuste-fish}
\begin{tabular}{lcccccrc}
  \toprule
Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & \\
  \midrule
<<tab-fish1, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, -2, 3)
print.xtable(xtable(tab[1:2, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
Binomial Negativo & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & $\hat{\theta}$ \\
  \midrule
<<tab-fish2, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, 4, 3)
print.xtable(xtable(tab[3:4, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
COM-Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & $\hat{\phi}$ \\
  \midrule
<<tab-fish3, results="asis">>=

digits <- c(1, 1, 0, 2, 2, 2, 0, 3, 3)
print.xtable(xtable(tab[5:6, ], digits = digits),
             include.colnames  = FALSE,
             hline.after = NULL,
             only.contents = TRUE)

@
\specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
  \bottomrule
\end{tabular}
\begin{tablenotes}
  \footnotesize
\item np, número de parâmetros; diff $\ell$, diferença entre
  log-verossimilhanças; F, estatística F baseada nas quase-deviances;
  diff np, diferença entre o np. \\[0.1cm]
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

Na \autoref{tab:ajuste-fish} as medidas de ajuste dos modelos Poisson,
binomial negativo e COM-Poisson são apresentadas para comparação dos
resultados. Observa-se pelas log-verossimilhanças maximizadas que o
modelo Poisson não se ajustou adequadamente quando comparado aos
demais. Isso se deve ao fato discutido na \autoref{cap02:zeros}, que
mesmo modelando os zeros pode-se ter diferentes níveis de dispersão para
as contagens não nulas. Nesse exemplo, as contagens não nulas são
superdispersas, visto pelas estimativas dos parâmetros extras do modelo
binomial negativo e COM-Poisson. Indicado pelos níveis descritivos dos
TRV's aplicados nos modelos encaixados, há evidências de que o modelo com
efeitos de interação é distinto do modelo com efeitos aditivos definido
no preditor 1.

As estimativas dos parâmetros para cada especificação de modelos são
exibidas na \autoref{tab:coef-fish}. Observe, primeiramente, que as
estimativas dos parâmetros $\gamma_i$, $i = 0, 1, 2, 3, 4$ são
idênticas, independentemente do modelo adotado. Esse resultado é
esperado, pois na construção dos modelos com componente de barreira, a
modelagem da parte que contempla os valores zero é realizada via
distribuição Bernoulli com parâmetro
$\pi_i = \textrm{logit}(\bm{z}_i^\top\bm{\gamma})$. As diferenças entre
os modelos ocorre na distribuição considerada para a parte das contagens
não nulas.

\begin{table}[ht]
\centering
\caption{Estimativas dos parâmetros e razões entre as estimativa e erro
  padrão para os três modelos em estudo}
\label{tab:coef-fish}
\begin{tabular}{lcccccc}
  \toprule
  & \multicolumn{2}{c}{Poisson} & \multicolumn{2}{c}{Binomial Negativo} &  \multicolumn{2}{c}{COM-Poisson} \\
  \cmidrule(lr){2-3} \cmidrule(lr){4-5} \cmidrule(lr){6-7}
  Parâmetro  & Estimativa & Est/EP & Estimativa & Est/EP & Estimativa & Est/EP \\
  \midrule
<<coef-fish, results="asis">>=

##======================================================================
## Estimativas dos parâmetros

coHP <- rbind(
    c(NA, NA),
    do.call(rbind, summary(m2HP)$coef)[, c(1, 3)]
)
##
coHB <- with(summary(m2HB)$coef, {
    last <- nrow(count)
    rbind(
        c(exp(count[last, 1]), count[last, 3]),
        rbind(count[-last, c(1, 3)], zero[, c(1, 3)])
    )
})
##
coHC <- summary(m2HC)@coef[, c(1, 3)]

## Empilha
pnames <- c("$\\sigma^2,\\,\\phi$",
            paste("$\\beta_{", 0:4, "}$"),
            paste("$\\gamma_{", 0:4, "}$"))

tab <- data.frame(cbind(coHP, coHB, coHC))
rownames(tab) <- pnames

print.xtable(xtable(tab),
             include.rownames = TRUE,
             include.colnames = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
   \bottomrule
\end{tabular}
\begin{tablenotes}
  \small
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

Nos efeitos estimados para a parte da modelagem dos valores não nulos
têm-se algumas diferenças consideráveis. Destaca-se que as estimativas
dos parâmetros dos modelos Poisson e binomial negativo são comparáveis
entre si, pois modelam a média da distribuição truncada, mas não
comparáveis com as estimativas do modelo COM-Poisson, pois este modela
um parâmetro que não representa, diretamente, a média. Contudo,
independente da distribuição o sinal dos efeitos deve ser o mesmo. Isso
não ocorre nas estimativas dos parâmetros $\beta_3$, positiva no modelo
Poisson e negativa nos demais e $\beta_4$, positiva no modelo
COM-Poisson e negativa nos demais. Porém, esses efeitos não tem impacto
significativo, conforme pode ser visto na \autoref{fig:pred-fish}, que
exibe as médias calculadas com base nas três formulações. A seguir uma
discussão sobre os erros padrão dessas estimativas é feita.

Considerando a magnitude dos efeitos estimados nos modelos de barreira,
quando escalonados pelo seu erro padrão, obtido pelo negativo do inverso
da matriz hessiana, há diferenças substanciais entre o Poisson, binomial
negativo e COM-Poisson. O modelo COM-Poisson indica erros padrões das
estimativas muito menores que os apresentados no modelo binomial
negativo. Sob investigações do problema, encontrou-se que este resultado
se deve por inconsistências no procedimento numérico para determinação
da matriz hessiana por diferenças finitas no modelo COM-Poisson com
componente de barreira. Portanto, os erros padrão sob o modelo
COM-Poisson apresentados estão incorretos. Essa impossibilidade para
realização de testes do tipo Wald no modelo COM-Poisson foi particular
da análise desse conjunto de dados, uma possível causa seja a notável
superdispersão das contagens não nulas, $\hat{\theta}=$\Sexpr{coHB[1,1]}
e $\hat{\phi}=$\Sexpr{coHC[1,1]}.

<<pred-fish, fig.height=4, fig.width=6.5, fig.cap="Valores preditos do número de peixes capturados considerando o número de crianças e pessoas no grupo e a presença de um campista.">>=

##======================================================================
## Preditos

## Região para predição
pred <- expand.grid(campista = c("Não", "Sim"),
                    ncriancas = 0:3, npessoas = 1:4)

##-------------------------------------------
## Estimando as médias

## Pelo Hurdle Poisson
aux <- predict(m2HP, newdata = pred, type = "response")
predHP <- cbind(pred, fit = aux, model = "HP")

## Pelo Hurdle Binomial Negativo
aux <- predict(m2HB, newdata = pred, type = "response")
predHB <- cbind(pred, fit = aux, model = "HB")

## Pelo Hurdle COM-Poisson
aux <- predict(m2HC, newdata = pred, type = "response")
predHC <- cbind(pred, fit = aux, model = "HC")

##
pred.all <- rbind(predHP, predHB, predHC)

##-------------------------------------------
## Gráfico final

key <- list(
    lines = list(lty = 1:3),
    text = list(
        paste("Hurdle", c("Poisson", "COM-Poisson",
                          "Binomial Negativo")))
)

xyplot(npeixes ~ npessoas | campista,
       groups = ncriancas, data = subset(fish, npeixes < 50),
       jitter.x = TRUE,
       jitter.y = TRUE,
       type = c("p", "g"),
       xlab = "Número de pessoas no grupo",
       ylab = "Número de peixes capturados",
       key = key,
       alpha = 0.3,
       strip = strip.custom(
           strip.names = TRUE, var.name = "campista"
       ), par.settings = ps.sub) +
    as.layer(
        xyplot(fit ~ npessoas | campista,
               groups = ncriancas, data = predHP,
               type = "l",
               lty = 1)
    ) +
    as.layer(
        xyplot(fit ~ npessoas | campista,
               groups = ncriancas, data = predHC,
               type = "l",
               lty = 2)
    ) +
    as.layer(
        xyplot(fit ~ npessoas | campista,
               groups = ncriancas, data = predHB,
               type = "l",
               lty = 3)
    )
##-------------------------------------------
## Legenda
cols <- trellis.par.get("superpose.line")$col[1:4]
draw.key(
    key = list(
        cex = 0.9,
        columns = 1,
        lines = list(
            lty = 1, lwd = 2, col = cols),
        text = list(
            as.character(paste(unique(fish$ncriancas), "crianças")))
    ), draw = TRUE,
    vp = grid::viewport(
        x = grid::unit(0.22, "npc"), y = grid::unit(0.6, "npc")))

fonte.xy("Fonte: Elaborado pelo autor.")

@

Embora tenha-se constatado problemas nos algoritmos numéricos para
determinar a curvatura da log-verossimilhança, as estimativas pontuais
são coerentes com os demais modelos, conforme visto na
\autoref{fig:pred-fish}, onde são apresentadas as médias calculadas com
base nos três modelos estudados. Observa-se em todos os modelos a mesma
tendência.

Com esse exemplo, ilustra-se a extensão do modelo COM-Poisson para
acomodar excesso de zeros e ressalta-se que as contagens não nulas
analisadas são superdispersas. Para esses casos, a distribuição binomial
negativa se apresenta como principal alternativa. Porém, em casos que as
contagens não nulas se mostram subdispersas não há opções prontamente
disponíveis para análise e o modelo COM-Poisson com componente de
barreira, conforme apresentado, se torna uma abordagem atrativa.

\section{Análise de dados de reprodução de nematoides em cultivares de
  feijoeiro}
\label{sec:analise-nematodes}

<<ajuste-nematodes, include=FALSE, cache=FALSE>>=

library(cmpreg)
library(lme4)
data(nematodes)

## Preditores
f1 <- nema ~ (1|cult)
f2 <- nema ~ log(off) + (1|cult)

## Ajuste dos mixed Poisson
m1PM <- glmer(f1, data = nematodes, family = poisson)
m2PM <- glmer(f2, data = nematodes, family = poisson)

##-------------------------------------------
## ## Ajuste dos mixed COM-Poisson
## m1CM <- mixedcmp(f1, data = nematodes, sumto = 50)
## m2CM <- mixedcmp(f2, data = nematodes, sumto = 50)
load("mixedcmp_models.rda")

@

Nessa última aplicação apresentada no trabalho, ilustra-se a extensão
dos modelos de contagem para inclusão de efeitos aleatórios. Os modelos
considerados para análise são o Poisson e o COM-Poisson com efeitos
aleatórios. O conjunto de dados se refere ao número de nematoides,
mensurados em soluções (\texttt{sol}) compostas da massa fresca de
raízes diluídas em água para diferentes cultivares
(\autoref{sec:nematodes}). Considera-se, para ambos os modelos, os
seguintes preditores:
\begin{itemize}
  \setlength\itemsep{-0.6cm}
\item[] Preditor 1: $g(\mu) = \beta_0 + b_j$ \\
\item[] Preditor 2:
  $g(\mu) = \beta_0 + \beta_1 \log(\textrm{sol})_i + b_j$
\end{itemize}
em que $i = 1, 2, \cdots, \Sexpr{nrow(nematodes)}$ (número de
observações) e $j$ varia nos níveis da cultivar de feijão ($j =$ A, B,
C, $\cdots$, S) representando o efeito aleatório, realização de uma
variável aleatória normal de média 0 e variância $\sigma^2$. Assim, nos
modelos propostos, tem-se a variabilidade entre as cultivares explicada
por uma distribuição normal e a variabilidade dentro das cultivares
explicada pela relação média--variância descrita pelo modelo
considerado, Poisson ou COM-Poisson.

<<logLik-nematodes, include=FALSE>>=

## Anova
anP <- myanova(m1PM, m2PM)
anC <- myanova(m1CM, m2CM)

## TRV entre Mixed-Poisson e Mixed-COMPoisson
trv <- 2 * (anC[, 2] - anP[, 2])
pvs <- pchisq(q = trv, df = 1, lower.tail = FALSE)
phi <- sapply(list(m1CM, m2CM), function(model) model@fullcoef[1])

## Empilha na tabela
tab <- data.frame(
    preditor = rep(paste("Preditor", 1:2), 2),
    rbind(cbind(anP, cbind(c(NA, NA)), c(NA, NA)),
          cbind(anC, phi, pvs)))

digits <- c(1, 1, 0, 2, 2, 2, 0, 4, 3, 4)

@

O ajuste dos modelos com a inclusão de efeitos aleatórios requer a
solução de uma integral, resolvida numericamente. Isso torna o
procedimento de ajuste computacionalmente intensivo e bastante
suscetível a problemas numéricos. Em algumas iterações durante o
algoritmo de estimação dos parâmetros dos modelos COM-Poisson de efeitos
mistos, os valores considerados para os parâmetros resultaram em somas
$Z(\lambda_i, \phi)$ que não puderam ser representadas na memória do
computador. Porém, o algoritmo dispõe de procedimentos que evitam sua
interrupção, propondo novos valores mesmo quando a função objetivo não
pôde ser calculada, alcançando o máximo da log-verossimilhança. Para o
modelo Poisson de efeitos aleatórios, utilizou-se das programações em R
providas pelo pacote \texttt{lme4} \cite{Bates2015}, que utilizam
matrizes esparsas para os efeitos aleatórios e otimização em linguagem
de baixo nível (\texttt{C++}), minimizando os problemas numéricos.

Os resultados do ajuste para avaliação e comparação dos modelos são
apresentados na \autoref{tab:ajuste-nematodes}. Os valores
indicam que os modelos Poisson e COM-Poisson se ajustaram de forma
equivalente, os valores da log-verossimilhança foram muito
próximos. Essa equivalência também é apontada pelos AIC's, que foram
maiores para nos modelos COM-Poisson e pelos níveis descritivos dos
TRV's realizados sob a hipótese $H_0: \phi = 0$, indicando que a adoção
de um modelo com um parâmetro adicional não é justificado pelo pequeno
acréscimo na log-verossimilhança. Com relação ao efeito do logaritmo da
solução de massa fresca de raiz, há evidências apontando um efeito
significativo para explicação do número de nematoides.

\begin{table}[ht]
\centering
\caption{Medidas de ajuste para avaliação e comparação entre preditores
  e modelos ajustados}
\label{tab:ajuste-nematodes}
\begin{tabular}{lcccccrcr}
  \toprule
 Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) &  \\
  \midrule
<<tab-nematodes1, results="asis">>=

print(xtable(tab[1:2, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
  \specialrule{0em}{0.5em}{0em} %% Apenas para espaçamento
 COM-Poisson & np & $\ell$ & AIC & 2(diff $\ell$) & diff np & P($>\rchi^2$) & $\hat{\phi}$ & P($>\rchi^2$) \\
  \midrule
<<tab-nematodes2, results="asis">>=

print(xtable(tab[3:4, ], digits = digits),
      include.colnames = FALSE,
      hline.after = NULL,
      only.contents = TRUE)

@
   \bottomrule
\end{tabular}
\begin{tablenotes}
  \footnotesize
\item np, número de parâmetros; diff $\ell$, diferença entre
  log-verossimilhanças; diff np, diferença entre o np.
\item Fonte: Elaborado pelo autor.
\end{tablenotes}
\end{table}

<<prof-nematodes, fig.height=3, fig.width=7, fig.cap="Perfis de verossimilhança dos parâmetros estimados no modelo COM-Poisson Misto.">>=

fl <- expression(phi, log(sigma), beta[0], beta[1])
myprof(profCM, subset = 3.5,
       namestrip = fl, xlab = "Parâmetros do modelo",
       par.settings = ps.sub)

fonte.xy("Fonte: Elaborado pelo autor.")

@

Permanecendo com o segundo preditor, com o efeito do logaritmo da
solução, as estimativas dos parâmetros do modelo são apresentadas na
\autoref{tab:coef-nematodes}, em conjunto os erros padrão das
estimativas, obtidos da matriz de informação de Fisher. Novamente, os
resultados dos modelos são similares. Lembre-se que, dessa tabela, o
único resultado comparável diretamente é a razão entre estimativa e erro
padrão do parâmetro $\beta_1$. O parâmetro $\sigma$ é o desvio padrão da
distribuição dos efeitos aleatórios, que no modelo Poisson são somados
aos efeitos fixos para composição de $\mu$ e na COM-Poisson para
composição de $\lambda$. Outro resultado interessante é a estimativa do
parâmetro $\phi$ da COM-Poisson que, positiva, indica uma subdispersão
moderada nesse conjunto de dados. Uma vantagem do modelo misto
COM-Poisson é que se pode distinguir a variabilidade da contagem da
variabilidade induzida pelo efeito de grupo no experimento. Nesse
exemplo, tem-se a variabilidade do efeito aleatório, $\sigma$ maior no
modelo COM-Poisson que no Poisson, porém essa variabilidade extra
capturada pelo efeito aleatório é compensada pela subdispersão capturada
pelo parâmetro $\phi$.

\begin{table}[ht]
\centering
\caption{Estimativas dos parâmetros e razões entre as estimativa e erro
  padrão para os três modelos em estudo}
\label{tab:coef-nematodes}
\begin{tabular}{lcccccc}
  \toprule
  & \multicolumn{3}{c}{Poisson} & \multicolumn{3}{c}{COM-Poisson} \\
  \cmidrule(lr){2-4} \cmidrule(lr){5-7}
Parâmetro & Estimativa & E. Padrão & Est/EP & Estimativa & E. Padrão & Est/EP \\
  \midrule
<<coef-nematodes, results="asis">>=

pnames <- paste0("$", c("\\phi", "\\sigma", "\\beta_0", "\\beta_1"), "$")

tabMP <- rbind(
    phi = c(NA, NA, NA),
    lsigma = c(sqrt(VarCorr(m2PM)$cult), NA, NA),
    summary(m2PM)$coef[, -4])

tabMC <- rbind(
    summary(m2CM)@coef[1 ,-4],
    lsigma = c(exp(m2CM@coef[2]), NA, NA),
    summary(m2CM)@coef[-(1:2) ,-4])

tab <- cbind(tabMP, tabMC)
rownames(tab) <- pnames

print.xtable(xtable(tab),
             include.rownames = TRUE,
             include.colnames = FALSE,
             hline.after = NULL,
             only.contents = TRUE,
             sanitize.text.function = function(x) x)

@
  \bottomrule
\end{tabular}
\end{table}

Como resultados complementares à \autoref{tab:coef-nematodes}, tem-se os
perfis de verossimilhança com intervalos de confianças de níveis 99, 95
e 90\% apresentados na \autoref{fig:prof-nematodes}. Observa-se um
comportamento razoavelmente simétrico para todos os estimadores, apenas
com uma assimetria levemente destacada para $\hat{\beta}_0$. Isso traz
mais segurança na interpretação dos resultados baseados na aproximação
quadrática da verossimilhança, que são de fácil obtenção pois só
envolvem inversão de matrizes. No perfil de verossimilhança para
$\hat{\phi}$, há mais uma evidência da equivalência entre os modelos
Poisson e COM-Poisson, pois os intervalos contém o valor 0.

<<corr-nematodes, fig.width=3.5, fig.height=3.5, fig.cap="Imagem da matriz de correlação entre os parâmetros do modelo COM-Poisson.">>=

pnames <- c(":hat(phi)", ":log(hat(sigma))",
            paste0(":hat(beta)[", 0:1, "]"))

Vcov <- vcov(m2CM)
Corr <- cov2cor(Vcov)
dimnames(Corr) <- list(pnames, pnames)
mycorrplot(Corr)

fonte("Fonte: Elaborado pelo autor.")

@

<<varspred-nematodes, include=FALSE>>=

##-------------------------------------------
## Obtendo os efeitos aleatórios
ranefP <- ranef(m2PM)$cult[, 1]
ranefC <- mixedcmp.ranef(m2CM)
ranef.all <- rbind(
    data.frame(model = "PM", ranef = ranefP),
    data.frame(model = "CM", ranef = ranefC))

##-------------------------------------------
## Valores preditos
pred <- with(
    nematodes,
    expand.grid(off = seq(min(off), max(off), length.out = 20),
                cult = levels(cult))
    )
X <- model.matrix(~log(off), data = pred)

## Pelo Poisson Mixed
aux <- predict(m2PM, newdata = pred, type = "link")
predPM <- data.frame(pred, y = exp(aux), model = "MP")
muPM <- data.frame(pred, mu = exp(X %*% fixef(m2PM)), model = "MP")

## Pelo COM-Poisson Mixed
aux <- predict(m2CM, newdata = pred, type = "link")
predCM <- data.frame(pred, y = calc_mean_cmp(aux, phi = m2CM@coef[1]),
                     model = "MC")
muCM <- data.frame(pred, mu = calc_mean_cmp(X %*% m2CM@coef[-(1:2)],
                                            phi = m2CM@coef[1]),
                   model = "MC")

## Agrupa as predições
pred.all <- rbind(predPM, predCM)
mu.all <- rbind(muPM, muCM)

@

Conforme já observado anteriormente, no modelo COM-Poisson misto os
parâmetros $\phi$, da distribuição considerada para a variável de
contagem condicional aos efeitos aleatórios e as covariáveis e $\sigma$,
da distribuição considerada para os efeitos aleatórios são conjuntamente
responsáveis pela explicação da variabilidade das contagens. Na
\autoref{fig:corr-nematodes}, são apresentados as covariâncias entre os
estimadores do modelo, na escala de correlação, a fim de verificar,
principalmente, a correlação entre $\hat{\sigma}$ e
$\hat{\phi}$. Observa-se que, conforme esperado, estes estimadores
apresentam uma forte correlação e ainda que esta é positiva, pois as
contagens são superdispersas, ainda que não de forma acentuada. Nota-se
também, que a característica de não ortogonalidade entre os parâmetros de
locação e $\phi$ se mantém com a inclusão de efeitos aleatórios.

Na \autoref{fig:pred-nematodes}, são apresentados as predições do efeito
aleatório em cada modelo (à direita) e as contagens preditas para cada
cultivar e para o comportamento médio (à esquerda). A distribuição
empírica dos efeitos aleatórios, gráfico à direita, está de acordo com
os parâmetros estimados para $\sigma$, vistos na
\autoref{tab:coef-nematodes}. Têm-se a ordenação dos efeitos aleatórios
idêntica em ambos os modelos, porém valores mais dispersos no caso
COM-Poisson. Devido ao parâmetro adicional $\phi$ do modelo COM-Poisson,
que indica subdispersão, tem-se os valores preditos por esse modelo
muito similares aos preditos pelo modelo Poisson, conforme observa-se no
gráfico à direita da \autoref{fig:pred-nematodes}. A soma das
diferenças ao quadrado, entre valores preditos pelos dois modelos foi de
\Sexpr{sum((predCM$y - predPM$y)^2)}, o que mostra que ambos os modelos
levam ao mesmo resultado.

<<pred-nematodes, fig.height=4.2, fig.width=7.4, fig.cap="Perfis de verossimilhança dos parâmetros estimados no modelo COM-Poisson Misto.">>=

xy1 <- densityplot(
    ~ranef, groups =  model,
    auto.key = list(
        column = 1,
        text = c("Poisson", "COM-Poisson")
    ),
    xlab = "Predição dos efeitos\n aleatórios",
    ylab = "Densidade",
    data = ranef.all,
    grid = TRUE,
    par.settings = ps.sub)

key <- list(
    column = 1,
    lines = list(lty = c(1, 2), lwd = c(3, 1)),
    text = list(c("Perfil médio", "Perfil por cultivar")))

## Faz o gráfico
nematodes2 <- rbind(nematodes, nematodes)
nematodes2$model <- rep(c("MP", "MC"), each = nrow(nematodes))
xy2 <- xyplot(nema ~ off | model,
              groups = cult,
              data = nematodes2,
              type = c("p", "g"),
              alpha = 0.4,
              key = key,
              xlab = paste("Solução de massa fresca de raizes\n",
                           "pelo volume de água"),
              ylab = "Contagem de nematoides",
              strip = strip.custom(
                  factor.levels = c("Poisson", "COM-Poisson")
              ),
              par.settings = ps.sub) +
    as.layer(
        xyplot(y ~ off | model, groups = cult, data = pred.all,
               type = "l", lty = 2)
    ) +
    as.layer(
        xyplot(mu ~ off | model, groups = cult, data = mu.all,
               type = "l", col = 1, lwd = 3)
    )

## Organiza layout
print(xy2, position = c(0, 0, 0.6, 1), more = TRUE)
print(xy1, position = c(0.57, 0, 1, 1), more = FALSE)

fonte.xy("Fonte: Elaborado pelo autor.")

@

Nessa aplicação, ilustra-se a extensão do modelo COM-Poisson para
inclusão de efeitos aleatórios. Nesse caso, a análise se deu a um
experimento em que as contagens, condicionadas aos efeitos aleatórios,
se apresentaram de forma equidispersa, indicada pelo modelo COM-Poisson,
e os resultados entre os modelos COM-Poisson e Poisson foram
equivalentes.

\section{Discussões}
\label{cap04:discussao}

Nos quatro primeiros conjuntos de dados, em que modelou-se as contagens
via modelos de regressão de efeitos fixos, observou-se resultados dos
modelos COM-Poisson equivalentes à abordagem baseada na especificação de
média e variãncia, quase-verossimilhança. Porém, ressalta-se que na
abordagem por quase-verossimilhança, com a especificação de apenas dois
momentos, i) não se pode representar a distribuição de probabilidades da
variável em estudo, ii) a informação a respeito da média é igual ou
inferior a uma abordagem totalmente paramétrica e iii) extensões como a
modelagem de excesso de zeros e modelagem do parâmetro de dispersão não
são imediatas. Nos casos de superdispersão, explorou-se também os
resultados dos modelos baseados na distribuição binomial negativa e
nessa abordagem, tem-se o inconveniente de somente a característica de
superdispersão ser contemplada. Nos estudos de caso, os modelos binomial
negativo proporcionaram resultados, com relação a significância dos
efeitos, equivalentes ao COM-Poisson e quase-Poisson. Porém, em um dos
estudos com acentuada superdispersão, os valores preditos pontuais e
intervalares obtidos do modelo binomial negativo, diferiram dos modelos
COM-Poisson e quase-Poisson, isso devido a forma da relação
média--variância dessa distribuição, \autoref{fig:mv-binomneg}.

Nas extensões propostas para o modelo COM-Poisson, obteve-se resultados
satisfatórios. No caso da inclusão de um componente de barreira para
modelagem de excesso de zeros, os resultados dos testes de razão de
verossimilhanças para testar a significância dos efeitos foram
equivalentes ao modelo binomial negativo com componente de barreira,
assim como as estimativas pontuais dos valores preditos. Ainda nessa
aplicação, não foi possível a obtenção dos erros padrão das estimativas
dos efeitos, baseados na matriz hessiana, devido a problemas numéricos
na determinação dessa matriz. Para o caso estendido do modelo
COM-Poisson em que acomoda-se efeitos aleatórios, os procedimentos
computacionalmente intensivos que são empregados no algoritmo de
estimação ganham destaque. A aplicação se deu a um experimento que
apresentou contagens com um grau não significativo de
subdispersão. Nessa aplicação os modelos empregados foram o Poisson e o
COM-Poisson, ambos de efeitos mistos e todos os resultados, em questões
inferenciais, foram equivalentes, mas com poder de teste maior para o
modelo COM-Poisson.

Nas aplicações, em geral, pode-se notar características que permearam a
todos os modelos baseados na distribuição COM-Poisson. A primeira delas,
e talvez a mais difícil de se contornar, é a determinação da constante
de normalização, pois essa depende do parâmetro que está associado a um
preditor linear, assim deve-se calcular $n$ constantes a cada iteração
no algoritmo de estimação. Em casos de contagens altas e superdispersão
o cálculo dessa constante é extremamente demorado. Outra característica
que se manisfestou em todas as aplicações foi a não ortogonalidade entre
os parâmetros de regressão e o parâmetro adicional $\phi$, observada
pelas correlações entre os estimadores obtidas a partir da matriz
hessiana, o que torna as inferências dependentes. As correlações entre o
estimador para o parâmetro de dispersão, $\hat{\phi}$ e o estimador para
$\beta_0$, foram praticamente 1 em todos os exemplos. Isso se dá devido
a parametrização de efeitos, em que $\beta_0$ governa a locação do
parâmetro $\lambda$ e os demais parâmetros são diferenças. Em pesquisas
não relatadas nesse trabalho, verificou-se que a reparametrização do
parâmetro $\lambda$, adotando a aproximação para média, contorna essa
característica com o preço de se ter uma distribuição aproximada. Nas
aplicações, explorou-se também os perfis de verossimilhança para o
parâmetro $\phi$ da COM-Poisson e o comportamento aproximadamente
simétrico, em todos casos, induz que aproximações quadráticas da
verossimilhança podem ter desempenhos satisfatórios.
